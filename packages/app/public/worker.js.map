{"version":3,"file":"worker.js","sources":["../../utils/src/logging.js","../../data-remote/src/remote-websocket-connection.js","../../data-remote/src/servers/vuu/messages.js","../../data-remote/src/servers/vuu/array-backed-moving-window.js","../../data-remote/src/servers/vuu/new-server-proxy.js","../../remote-worker/src/worker.js"],"sourcesContent":["export const logColor = {\n  plain : 'color: black; font-weight: normal',\n  blue : 'color: blue; font-weight: bold',\n  brown : 'color: brown; font-weight: bold',\n  green : 'color: green; font-weight: bold',\n}\n\nconst {plain} = logColor;\nexport const createLogger = (source, labelColor=plain, msgColor=plain) => ({\n  log: (msg, args='') => console.log(`[${Date.now()}]%c[${source}] %c${msg}`,labelColor, msgColor, args),\n  warn: (msg) => console.warn(`[${source}] ${msg}`)\n})\n","import { createLogger, logColor} from '@heswell/utils/src/logging';\n\nconst logger = createLogger('WebsocketConnection', logColor.brown);\n\nconst connectionAttempts = {};\n\nconst setWebsocket = Symbol('setWebsocket');\nconst connectionCallback = Symbol('connectionCallback');\n\nexport default async function connect(connectionString, callback, connectionStatusCallback) {\n    return makeConnection(connectionString, msg => {\n      const {type} = msg;\n      if (type === 'connection-status'){\n        connectionStatusCallback(msg);\n      } else if (type === 'HB'){\n          console.log(`swallowing HB in WebsocketConnection`);\n      } else if (type === 'Welcome'){\n        // Note: we are actually resolving the connection before we get this session message\n        logger.log(`Session established clientId: ${msg.clientId}`)\n      } else {\n        callback(msg)\n      }\n    });\n}\n\nasync function reconnect(connection){\n  console.log(`reconnect connection at ${connection.url}`)\n  makeConnection(connection.url, connection[connectionCallback], connection);\n}\n\nasync function makeConnection(url, callback, connection){\n\n  const connectionStatus = connectionAttempts[url] || (connectionAttempts[url] = {\n    attemptsRemaining: 5,\n    status: 'not-connected'\n  });\n\n  try {\n    callback({type: 'connection-status', status: 'connecting'});\n    const reconnecting = typeof connection !== 'undefined';\n    const ws = await createWebsocket(url);\n\n    console.log(`%c⚡ %c${url}`, 'font-size: 24px;color: green;font-weight: bold;','color:green; font-size: 14px;');\n\n    if (reconnecting){\n      connection[setWebsocket](ws);\n    } else {\n      connection = new Connection(ws, url, callback);\n    }\n\n    const status = reconnecting ? 'reconnected' : 'connected';\n\n    callback({type: 'connection-status', status});\n\n    connection.status = status;\n\n    return connection;\n\n  } catch(evt){\n    const retry = --connectionStatus.attemptsRemaining > 0;\n    callback({type: 'connection-status', status: 'not-connected', reason: 'failed to connect', retry});\n    if (retry){\n      return makeConnectionIn(url, callback, connection, 10000);\n    }\n  }\n}\n\nconst makeConnectionIn = (url, callback, connection, delay) => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(makeConnection(url, callback, connection))\n  }, delay)\n});\n\nconst createWebsocket = connectionString => new Promise((resolve, reject) => {\n  //TODO add timeout\n    const ws = new WebSocket('ws://' + connectionString);\n    ws.onopen = () => resolve(ws);\n    ws.onerror = evt => reject(evt);\n});\n\n// TEST DATA COLLECTION\nconst websocket_messages = [];\nexport const getWebsocketData = () => {\n  const messages = websocket_messages.slice();\n  websocket_messages.length = 0;\n  return messages;\n}\n\nclass Connection {\n\n  constructor(ws, url, callback) {\n\n    this.url = url;\n    this[connectionCallback] = callback;\n    this[setWebsocket](ws);\n    this.status = 'ready';\n\n  }\n\n  reconnect(){\n    reconnect(this);\n  }\n\n  [setWebsocket](ws){\n\n    const callback = this[connectionCallback];\n\n    ws.onmessage = evt => {\n      // TEST DATA COLLECTION\n      // if (!/\"type\":\"HB\"/.test(evt.data)){\n      //   websocket_messages.push(evt.data);\n      // }\n      const message = JSON.parse(evt.data);\n      // console.log(`%c<<< [${new Date().toISOString().slice(11,23)}]  (WebSocket) ${message.type || JSON.stringify(message)}`,'color:white;background-color:blue;font-weight:bold;');\n      callback(message);\n    }\n\n    ws.onerror = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: red;font-weight: bold;','color:red; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'error'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    ws.onclose = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: orange;font-weight: bold;','color:orange; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'close'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    const send = msg => {\n      // console.log(`%c>>>  (WebSocket) ${JSON.stringify(msg)}`,'color:blue;font-weight:bold;');\n      ws.send(JSON.stringify(msg));\n    }\n\n    const warn = msg => {\n      logger.log(`Message cannot be sent, socket closed: ${msg.type}`);\n    }\n\n    const queue = msg => {\n      console.log(`queuing message ${JSON.stringify(msg)} until websocket reconnected`)\n    }\n\n    const abort = msg => {\n      throw Error('This connection is dead');\n    }\n\n    this.send = send;\n\n    this.close = () => {\n      console.log('[Connection] close websocket')\n      this.status = 'closed';\n      ws.close();\n      this.send = warn;\n    }\n\n  }\n\n}\n\n","export const AUTH = 'AUTH';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const CHANGE_VP = 'CHANGE_VP';\nexport const CHANGE_VP_SUCCESS = 'CHANGE_VP_SUCCESS';\nexport const CHANGE_VP_RANGE = 'CHANGE_VP_RANGE';\nexport const CHANGE_VP_RANGE_SUCCESS = 'CHANGE_VP_RANGE_SUCCESS';\nexport const CLOSE_TREE_NODE = \"CLOSE_TREE_NODE\";\nexport const CLOSE_TREE_SUCCESS = \"CLOSE_TREE_SUCCESS\";\nexport const CLOSE_TREE_REJECT = \"CLOSE_TREE_REJECT\";\nexport const CREATE_VISUAL_LINK = 'CREATE_VISUAL_LINK';\nexport const CREATE_VISUAL_LINK_SUCCESS = 'CREATE_VISUAL_LINK_SUCCESS';\nexport const CREATE_VP = 'CREATE_VP';\nexport const CREATE_VP_SUCCESS = 'CREATE_VP_SUCCESS';\nexport const DISABLE_VP = \"DISABLE_VP\";\nexport const DISABLE_VP_SUCCESS = \"DISABLE_VP_SUCCESS\";\nexport const DISABLE_VP_REJECT = \"DISABLE_VP_REJECT\";\nexport const ENABLE_VP = \"ENABLE_VP\";\nexport const ENABLE_VP_SUCCESS = \"ENABLE_VP_SUCCESS\";\nexport const ENABLE_VP_REJECT = \"ENABLE_VP_REJECT\";\nexport const GET_TABLE_LIST = \"GET_TABLE_LIST\";\nexport const GET_TABLE_META = \"GET_TABLE_META\";\nexport const HB = \"HB\";\nexport const HB_RESP = \"HB_RESP\";\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const OPEN_TREE_NODE = \"OPEN_TREE_NODE\";\nexport const OPEN_TREE_SUCCESS = \"OPEN_TREE_SUCCESS\";\nexport const OPEN_TREE_REJECT = \"OPEN_TREE_REJECT\";\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_SELECTION_SUCCESS = 'SET_SELECTION_SUCCESS';\nexport const TABLE_META_RESP = 'TABLE_META_RESP';\nexport const TABLE_LIST_RESP = 'TABLE_LIST_RESP';\n\nexport const TABLE_ROW = 'TABLE_ROW';\nexport const SIZE = 'SIZE'\nexport const UPDATE = 'U'\n","\nclass WindowRange {\n  constructor(from, to){\n    this.from = from;\n    this.to = to;\n  }\n\n  isWithin(index) {\n    return index >= this.from && index < this.to;\n  }\n\n  //find the overlap of this range and a new one\n  overlap(from, to){\n    return (from >= this.to || to < this.from)\n      ? [0, 0]\n      : [Math.max(from, this.from), Math.min(to, this.to)]\n  }\n\n  copy(){\n    return new WindowRange(this.from, this.to);\n  }\n}\n\nexport class ArrayBackedMovingWindow {\n\n  constructor(bufferSize){\n    this.range = new WindowRange(0, bufferSize)\n    //internal data is always 0 based, we add range.from to determine an offset\n    this.internalData = new Array(bufferSize);\n    this.rowsWithinRange = 0;\n  }\n\n  get hasAllRowsWithinRange(){\n    return this.rowsWithinRange === this.range.to - this.range.from;\n  }\n\n  setAtIndex(index, data){\n    //onsole.log(`ingest row at rowIndex ${index} [${index - this.range.from}]`)\n    if(this.isWithinRange(index)){\n      const internalIndex = index - this.range.from;\n      if (!this.internalData[internalIndex]){\n        this.rowsWithinRange += 1;\n        //onsole.log(`rowsWithinRange is now ${this.rowsWithinRange} out of ${this.range.to - this.range.from}`)\n      }\n      this.internalData[internalIndex] = data\n    }\n  }\n\n  getAtIndex(index){\n      return this.range.isWithin(index) && this.internalData[index - this.range.from] != null\n        ? this.internalData[index - this.range.from]\n        : undefined;\n  }\n\n  isWithinRange(index){\n    return this.range.isWithin(index);\n  }\n\n  setRange(from, to){\n      const [overlapFrom, overlapTo] = this.range.overlap(from, to);\n\n      const newData = new Array(to - from);\n      this.rowsWithinRange = 0;\n\n      for (let i=overlapFrom; i < overlapTo; i++){\n        const data = this.getAtIndex(i);\n        if (data){\n          newData[i - from] = data;\n          this.rowsWithinRange += 1;\n        }\n      }\n\n      this.internalData = newData\n      this.range.from = from\n      this.range.to = to\n  }\n\n  getData(lo=this.range.from, hi=this.range.to){\n    const {from, to} = this.range;\n    const startOffset = Math.max(0, lo - from);\n    const endOffset = Math.min(to-from, to, hi - from);\n    //onsole.log(`MovingWindow getData (${lo}, ${hi}) range = ${from} ${to} , so start=${startOffset}, end=${endOffset}`)\n    return this.internalData.slice(startOffset,endOffset);\n  }\n\n  getRange(){\n    return this.range.copy();\n  }\n}\n","import * as Message from './messages';\nimport { ArrayBackedMovingWindow } from \"./array-backed-moving-window\";\n\nlet _requestId = 1;\nconst nextRequestId = () => `${_requestId++}`;\n\nexport class ServerProxy {\n\n  constructor(connection, callback) {\n    this.connection = connection;\n    this.postMessageToClient = callback;\n\n    this.viewports = new Map();\n    this.mapClientToServerViewport = new Map();\n  }\n\n  async authenticate(username, password) {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer({ type: Message.AUTH, username, password }, \"\");\n      this.pendingAuthentication = { resolve, reject }\n    })\n  }\n\n  async login() {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer({ type: Message.LOGIN, token: this.loginToken, user: \"user\" }, \"\");\n      this.pendingLogin = { resolve, reject }\n    })\n  }\n\n  subscribe(message) {\n    const viewport = new Viewport(message);\n    this.viewports.set(message.viewport, viewport);\n    // use client side viewport as request id, so that when we process the response,\n    // with the serverside viewport we can establish a mapping between the two\n    const isReady = this.sessionId !== \"\";\n    this.sendIfReady(viewport.subscribe(), message.viewport, isReady)\n\n  }\n\n  handleMessageFromClient(message) {\n    const {type, viewport: clientViewportId} = message;\n    const serverViewportId = this.mapClientToServerViewport.get(clientViewportId);\n    const viewport = this.viewports.get(serverViewportId);\n    if (!viewport) {\n      switch (type) {\n        case Message.GET_TABLE_LIST:\n          this.sendMessageToServer({ type }, message.requestId)\n          break;\n        case Message.GET_TABLE_META:\n          this.sendMessageToServer({ type, table: message.table }, message.requestId)\n          break;\n        default:\n      }\n      return;\n    }\n    const isReady = viewport.status === 'subscribed';\n\n    switch (message.type) {\n      case 'setViewRange':\n        this.sendIfReady({\n          type: Message.CHANGE_VP_RANGE,\n          viewPortId: viewport.serverViewportId,\n          from: message.range.lo,\n          to: message.range.hi\n        },\n          _requestId++,\n          isReady)\n        break;\n\n      case 'sort': {\n        const requestId = nextRequestId();\n        const request = viewport.sortRequest(requestId, message.sortCriteria)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break\n\n      case 'groupBy': {\n        const requestId = nextRequestId();\n        const request = viewport.groupByRequest(requestId, message.groupBy)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'filterQuery': {\n        const requestId = nextRequestId();\n        const request = viewport.filterRequest(requestId, message.filter)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'select': {\n        const requestId = nextRequestId();\n        const { row, rangeSelect, keepExistingSelection } = message;\n        const request = viewport.selectRequest(requestId, row, rangeSelect, keepExistingSelection)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'disable': {\n        const requestId = nextRequestId();\n        const request = viewport.disable(requestId)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'enable': {\n        const requestId = nextRequestId();\n        const request = viewport.enable(requestId)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'openTreeNode':\n        this.sendIfReady({\n          type: Message.OPEN_TREE_NODE,\n          vpId: viewport.serverViewportId,\n          treeKey: message.key\n        },\n          _requestId++,\n          isReady)\n        break;\n\n      case 'closeTreeNode':\n        this.sendIfReady({\n          type: Message.CLOSE_TREE_NODE,\n          vpId: viewport.serverViewportId,\n          treeKey: message.key\n        },\n          _requestId++,\n          isReady)\n\n        break;\n\n\n      case \"createLink\": {\n        const { parentVpId, childVpId, parentColumnName, childColumnName } = message;\n        this.sendIfReady({\n          type: Message.CREATE_VISUAL_LINK,\n          parentVpId,\n          childVpId,\n          parentColumnName,\n          childColumnName\n        },\n          _requestId++,\n          isReady)\n      }\n        break;\n\n      default:\n        console.log(`Vuu ServerProxy Unexpected message from client ${JSON.stringify(message)}`)\n\n    }\n\n  }\n\n  sendIfReady(message, requestId, isReady = true) {\n    // TODO implement the message queuing in remote data view\n    if (isReady) {\n      this.sendMessageToServer(message, requestId);\n    } else {\n      // TODO need to make sure we keep the requestId\n      this.queuedRequests.push(message);\n    }\n    return isReady;\n  }\n\n  sendMessageToServer(body, requestId = _requestId++) {\n    // const { clientId } = this.connection;\n    this.connection.send({\n      requestId,\n      sessionId: this.sessionId,\n      token: this.loginToken,\n      user: \"user\",\n      module: \"CORE\",\n      body\n    });\n  }\n\n\n  handleMessageFromServer(message) {\n    const { requestId, body: {type, ...body} } = message;\n    const { viewports } = this;\n    switch (type) {\n\n      case Message.HB:\n        this.sendMessageToServer({ type: Message.HB_RESP, ts: +(new Date()) }, \"NA\");\n        break;\n\n      case Message.AUTH_SUCCESS:\n        this.loginToken = message.token;\n        this.pendingAuthentication.resolve(message.token);\n        break;\n\n      case Message.LOGIN_SUCCESS:\n        this.sessionId = message.sessionId;\n        this.pendingLogin.resolve(message.sessionId);\n        break;\n\n      case Message.CREATE_VP_SUCCESS:\n        // The clientViewportId was used as requestId for CREATE_VPmessage\n        if (viewports.has(requestId)) {\n          const viewport = viewports.get(requestId);\n          const { viewPortId: serverViewportId } = body;\n          viewports.set(serverViewportId, viewport);\n          viewports.delete(requestId);\n          this.mapClientToServerViewport.set(requestId, serverViewportId);\n          viewport.handleSubscribed(body);\n        }\n        break;\n\n      case Message.TABLE_ROW:\n        for (const row of body.rows) {\n          const { viewPortId, rowIndex, updateType } = row;\n          viewports.get(viewPortId).handleUpdate(updateType, rowIndex, row);\n        }\n        this.processUpdates();\n        break;\n\n      case Message.CHANGE_VP_RANGE_SUCCESS: {\n        const { viewPortId, from, to } = body;\n        viewports.get(viewPortId).setRange(from, to);\n      }\n        break;\n\n      case Message.TABLE_LIST_RESP:\n        this.postMessageToClient({ type, tables: body.tables, requestId });\n        break;\n      case Message.TABLE_META_RESP:\n        this.postMessageToClient({ type, table: body.table, columns: body.columns, requestId });\n        break;\n\n\n      default:\n        console.log(`handleMessageFromServer,${body.type}.`)\n    }\n  }\n\n\n  processUpdates() {\n    let clientMessage;\n    this.viewports.forEach((viewport) => {\n      if (viewport.shouldUpdateClient) {\n        clientMessage = clientMessage || { type: \"viewport-updates\", viewports: {} };\n        clientMessage.viewports[viewport.clientViewportId] = viewport.getClientRows();\n      }\n    });\n    if (clientMessage) {\n      this.postMessageToClient(clientMessage);\n    }\n  }\n\n}\n\n\n// const time = ts => {\n//   const date = new Date(ts);\n//   return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} ${date.getMilliseconds()}`\n// }\n\nclass Viewport {\n  constructor({ viewport, tablename, columns, range }) {\n    this.clientViewportId = viewport;\n    this.table = tablename;\n    this.status = '';\n    this.columns = columns;\n    this.clientRange = range;\n    this.sort = undefined;\n    this.groupBy = undefined;\n    this.filterSpec = {\n      filter: \"\"\n    };\n    this.isTree = false;\n    this.dataWindow = undefined;\n    this.rowCount = 0;\n    this.keys = new KeySet();\n\n    this.hasUpdates = false;\n    this.requiresKeyAssignment = true;\n\n  }\n\n  get shouldUpdateClient() {\n    return this.hasUpdates && this.dataWindow.hasAllRowsWithinRange;\n  }\n\n  subscribe(){\n    return {\n      type: Message.CREATE_VP,\n      table: this.table,\n      range: {\n        from: this.clientRange.lo,\n        to: this.clientRange.hi\n      },\n      columns: this.columns,\n      sort: {\n        sortDefs: this.sort\n      },\n      groupBy: this.groupBy,\n      filterSpec: this.filterSpec\n    }\n  }\n\n  handleSubscribed({ viewPortId, columns, table, range, sort, groupBy, filterSpec }) {\n    this.serverViewportId = viewPortId;\n    this.status = 'subscribed';\n    this.columns = columns;\n    this.table = table;\n    this.range = range;\n    this.sort = sort;\n    this.groupBy = groupBy;\n    this.filterSpec = filterSpec;\n    this.isTree = groupBy && groupBy.length > 0;\n    this.dataWindow = new ArrayBackedMovingWindow(range.to - range.from);\n\n    console.log(`%cViewport subscribed\n      clientVpId: ${this.clientViewportId}\n      serverVpId: ${this.serverViewportId}\n      table: ${this.table}\n      columns: ${columns.join(',')}\n      range: ${JSON.stringify(range)}\n      sort: ${JSON.stringify(sort)}\n      groupBy: ${JSON.stringify(groupBy)}\n      filterSpec: ${JSON.stringify(filterSpec)}\n    `, 'color: blue')\n  }\n\n  setRange(lo, hi) {\n    this.dataWindow.setRange(lo, hi);\n    this.requiresKeyAssignment = true;\n    this.hasUpdates = true;\n    //onsole.log(`after %csetRange%c ${lo} ${hi}, rowsWithinRange ${this.dataWindow.rowsWithinRange} hasAllRowsWithinRange ? ${this.dataWindow.hasAllRowsWithinRange}`,'color: blue;font-weight: bold;','');\n    //onsole.table(this.dataWindow.internalData)\n\n  }\n\n  handleUpdate(updateType, rowIndex, row) {\n    this.rowCount = row.vpSize;\n    if (updateType === 'U') {\n      if (this.dataWindow.isWithinRange(rowIndex)) {\n        // We need an additional check isWithinClientViewport\n        this.hasUpdates = true;\n        this.dataWindow.setAtIndex(rowIndex, row);\n      }\n    }\n  }\n\n  // TODO do we only return a client rowset when server range matches client range ?\n  getClientRows() {\n    // const { lo, hi } = this.clientRange;\n    const records = this.dataWindow.getData();\n    const clientRows = [];\n\n    if (this.requiresKeyAssignment) {\n      const { from, to } = this.dataWindow.range;\n      const keys = this.keys.reset(from, to);\n      for (let { rowIndex, rowKey, sel: isSelected, data } of records) {\n        clientRows.push([rowIndex, keys.keyFor(rowIndex), true, null, null, 1, rowKey, isSelected].concat(data))\n      }\n      this.requiresKeyAssignment = false;\n\n    } else {\n      for (let { rowIndex, rowKey, sel: isSelected, data } of records) {\n        clientRows.push([rowIndex, 0, true, null, null, 1, rowKey, isSelected].concat(data))\n      }\n    }\n\n    this.hasUpdates = false;\n    return clientRows;\n  }\n}\n\nexport class KeySet {\n  constructor() {\n    this.keys = new Map();\n    this.free = [];\n    this.nextKeyValue = 0;\n  }\n\n  next() {\n    if (this.free.length) {\n      return this.free.pop();\n    } else {\n      return this.nextKeyValue++;\n    }\n  }\n\n  reset(lo, hi) {\n    this.keys.forEach((keyValue, rowIndex) => {\n      if (rowIndex < lo || rowIndex >= hi) {\n        this.free.push(keyValue);\n        this.keys.delete(rowIndex);\n      }\n    });\n    for (let rowIndex = lo; rowIndex < hi; rowIndex++) {\n      if (!this.keys.has(rowIndex)) {\n        const nextKeyValue = this.next();\n        this.keys.set(rowIndex, nextKeyValue);\n      }\n    }\n    return this;\n  }\n\n  keyFor(rowIndex) {\n    return this.keys.get(rowIndex)\n  }\n}\n","import connect  from '@vuu-ui/data-remote/src/remote-websocket-connection';\n// TEST DATA COLLECTION\nimport {getWebsocketData} from '@vuu-ui/data-remote/src/remote-websocket-connection';\nimport { ServerProxy } from '@vuu-ui/data-remote/src/servers/vuu/new-server-proxy';\nimport { createLogger, logColor } from '@heswell/utils/src/logging';\n\n/* eslint-disable no-restricted-globals */\nconst url = new URL(self.location);\nconst urlParams = url.hash.slice(2);\nconsole.log(`urlParams: ${urlParams}`)\n\n\nconst logger = createLogger('Worker', logColor.brown);\n\nlet server;\n\nasync function connectToServer(url) {\n\n  const connection = await connect(\n    url,\n    // if this was called during connect, we would get a ReferenceError, but it will\n    // never be called until subscriptions have been made, so this is safe.\n    msg => server.handleMessageFromServer(msg),\n    msg => logger.log(JSON.stringify(msg))\n    // msg => {\n    //   onConnectionStatusMessage(msg);\n    //   if (msg.status === 'disconnected'){\n    //     server.disconnected();\n    //   } else if (msg.status === 'reconnected'){\n    //     server.resubscribeAll();\n    //   }\n    // }\n  );\n  server = new ServerProxy(connection, msg => postMessage(msg));\n  // TODO handle authentication, login\n  if (typeof server.authenticate === 'function') {\n    await server.authenticate('steve', 'pword');\n  }\n  if (typeof server.login === 'function') {\n    await server.login();\n  }\n\n}\n\nconst handleMessageFromClient = async ({ data: message }) => {\n  switch (message.type) {\n    case 'connect':\n      await connectToServer(message.url);\n      postMessage({ type: 'connected' })\n      break;\n    case 'subscribe':\n      server.subscribe(message);\n      break;\n    case 'unsubscribe':\n      server.unsubscribe(message.viewport);\n      break;\n    // TEST DATA COLLECTION\n    case 'send-websocket-data':\n      postMessage({type: \"websocket-data\", data: getWebsocketData()})\n      break;\n    default:\n      server.handleMessageFromClient(message);\n    }\n}\n\n/* eslint-disable-next-line no-restricted-globals */\nself.addEventListener('message',handleMessageFromClient);\n\npostMessage({ type: \"ready\" })\n"],"names":["logger","Message.AUTH","Message.LOGIN","Message.GET_TABLE_LIST","Message.GET_TABLE_META","Message.CHANGE_VP_RANGE","Message.OPEN_TREE_NODE","Message.CLOSE_TREE_NODE","Message.CREATE_VISUAL_LINK","Message.HB","Message.HB_RESP","Message.AUTH_SUCCESS","Message.LOGIN_SUCCESS","Message.CREATE_VP_SUCCESS","Message.TABLE_ROW","Message.CHANGE_VP_RANGE_SUCCESS","Message.TABLE_LIST_RESP","Message.TABLE_META_RESP","Message.CREATE_VP"],"mappings":"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"}