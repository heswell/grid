{"version":3,"file":"worker.js","sources":["../../../node_modules/@heswell/utils/src/logging.js","../../data-remote/src/remote-websocket-connection.js","../../data-remote/src/servers/vuu/messages.js","../../data-remote/src/servers/vuu/server-proxy.js","../../remote-worker/src/worker.js"],"sourcesContent":["export const logColor = {\n  plain : 'color: black; font-weight: normal',\n  blue : 'color: blue; font-weight: bold',\n  brown : 'color: brown; font-weight: bold',\n  green : 'color: green; font-weight: bold',\n}\n\nconst {plain} = logColor;\nexport const createLogger = (source, labelColor=plain, msgColor=plain) => ({\n  log: (msg, args='') => console.log(`[${Date.now()}]%c[${source}] %c${msg}`,labelColor, msgColor, args),\n  warn: (msg) => console.warn(`[${source}] ${msg}`)\n})\n","import { createLogger, logColor} from '@heswell/utils/src/logging';\nimport { ConnectionStatus } from './messages';\n\nconst logger = createLogger('WebsocketConnection', logColor.brown);\n\nconst connectionAttempts = {};\n\nconst setWebsocket = Symbol('setWebsocket');\nconst connectionCallback = Symbol('connectionCallback');\n\nexport default async function connect(connectionString, callback, connectionStatusCallback) {\n    return makeConnection(connectionString, msg => {\n      const {type} = msg;\n      if (type === 'connection-status'){\n        connectionStatusCallback(msg);\n      } else if (type === 'HB'){\n          console.log(`swallowing HB in WebsocketConnection`);\n      } else if (type === 'Welcome'){\n        // Note: we are actually resolving the connection before we get this session message\n        logger.log(`Session established clientId: ${msg.clientId}`)\n      } else {\n        callback(msg)\n      }\n    });\n}\n\nasync function reconnect(connection){\n  console.log(`reconnect connection at ${connection.url}`)\n  makeConnection(connection.url, connection[connectionCallback], connection);\n}\n\nasync function makeConnection(url, callback, connection){\n\n  const connectionStatus = connectionAttempts[url] || (connectionAttempts[url] = {\n    attemptsRemaining: 5,\n    status: 'not-connected'\n  });\n\n  try {\n    callback({type: 'connection-status', status: 'connecting'});\n    const reconnecting = typeof connection !== 'undefined';\n    const ws = await createWebsocket(url);\n\n    console.log(`%c⚡ %c${url}`, 'font-size: 24px;color: green;font-weight: bold;','color:green; font-size: 14px;');\n\n    if (reconnecting){\n      connection[setWebsocket](ws);\n    } else {\n      connection = new Connection(ws, url, callback);\n    }\n\n    const status = reconnecting ? 'reconnected' : 'connected';\n\n    callback({type: 'connection-status', status});\n\n    connection.status = status;\n\n    return connection;\n\n  } catch(evt){\n    const retry = --connectionStatus.attemptsRemaining > 0;\n    callback({type: 'connection-status', status: 'not-connected', reason: 'failed to connect', retry});\n    if (retry){\n      return makeConnectionIn(url, callback, connection, 10000);\n    }\n  }\n}\n\nconst makeConnectionIn = (url, callback, connection, delay) => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(makeConnection(url, callback, connection))\n  }, delay)\n});\n\nconst createWebsocket = connectionString => new Promise((resolve, reject) => {\n  //TODO add timeout\n    const ws = new WebSocket('ws://' + connectionString);\n    ws.onopen = () => resolve(ws);\n    ws.onerror = evt => reject(evt);\n});\n\n\nclass Connection {\n\n  constructor(ws, url, callback) {\n\n    this.url = url;\n    this[connectionCallback] = callback;\n    this[setWebsocket](ws);\n    this.status = 'ready';\n\n  }\n\n  reconnect(){\n    reconnect(this);\n  }\n\n  [setWebsocket](ws){\n\n    const callback = this[connectionCallback];\n\n    ws.onmessage = evt => {\n      const message = JSON.parse(evt.data);\n      // console.log(`%c<<< [${new Date().toISOString().slice(11,23)}]  (WebSocket) ${message.type || JSON.stringify(message)}`,'color:white;background-color:blue;font-weight:bold;');\n      if (Array.isArray(message)){\n        message.map(callback)\n      } else {\n        callback(message);\n      }\n    }\n\n    ws.onerror = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: red;font-weight: bold;','color:red; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'error'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    ws.onclose = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: orange;font-weight: bold;','color:orange; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'close'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    const send = msg => {\n      // console.log(`%c>>>  (WebSocket) ${JSON.stringify(msg)}`,'color:blue;font-weight:bold;');\n      ws.send(JSON.stringify(msg));\n    }\n\n    const warn = msg => {\n      logger.log(`Message cannot be sent, socket closed: ${msg.type}`);\n    }\n\n    const queue = msg => {\n      console.log(`queuing message ${JSON.stringify(msg)} until websocket reconnected`)\n    }\n\n    const abort = msg => {\n      throw Error('This connection is dead');\n    }\n\n    this.send = send;\n\n    this.close = () => {\n      console.log('[Connection] close websocket')\n      this.status = 'closed';\n      ws.close();\n      this.send = warn;\n    }\n\n  }\n\n}\n\n","export const AUTH = 'AUTH';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const CREATE_VP = 'CREATE_VP';\nexport const CREATE_VP_SUCCESS = 'CREATE_VP_SUCCESS';\nexport const CHANGE_VP = 'CHANGE_VP';\nexport const CHANGE_VP_SUCCESS = 'CHANGE_VP_SUCCESS';\nexport const CREATE_VISUAL_LINK = 'CREATE_VISUAL_LINK';\nexport const CREATE_VISUAL_LINK_SUCCESS = 'CREATE_VISUAL_LINK_SUCCESS';\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_SELECTION_SUCCESS = 'SET_SELECTION_SUCCESS';\nexport const CHANGE_VP_RANGE = 'CHANGE_VP_RANGE';\nexport const CHANGE_VP_RANGE_SUCCESS = 'CHANGE_VP_RANGE_SUCCESS';\nexport const TABLE_ROW = 'TABLE_ROW';\nexport const HB = \"HB\";\nexport const HB_RESP = \"HB_RESP\";\n\n\n\n\nexport const SIZE = 'SIZE'\nexport const UPDATE = 'U'","import * as Message from './messages';\nimport { ServerApiMessageTypes as API } from '../../messages.js';\n\nfunction partition(array, test, pass = [], fail = []) {\n\n    for (let i = 0, len = array.length; i < len; i++) {\n        (test(array[i], i) ? pass : fail).push(array[i]);\n    }\n\n    return [pass, fail];\n  }\n\nconst SORT = { asc: 'D', dsc : 'A' };\n\nconst byRowIndex = (row1, row2) => row1[0] - row2[0];\n\nlet _requestId = 1;\n\n\nconst logger = console;\n\nexport class ServerProxy {\n\n    constructor(connection, callback) {\n        this.connection = connection;\n        this.postMessageToClient = callback;\n        this.queuedRequests = [];\n        this.viewportStatus = {};\n\n        this.queuedRequests = [];\n        this.loginToken = \"\";\n        this.sessionId= \"\";\n        this.pendingLogin = null;\n        this.pendingAuthentication = null;\n\n    }\n\n    handleMessageFromClient(message) {\n\n        const viewport = this.viewportStatus[message.viewport];\n        if (!viewport){\n          return;\n        }\n        const isReady = viewport.status === 'subscribed';\n\n        switch (message.type){\n            case 'setViewRange':\n                this.sendIfReady({\n                    type : Message.CHANGE_VP_RANGE,\n                    viewPortId : viewport.serverViewportId,\n                    from : message.range.lo,\n                    to : message.range.hi\n                },\n                _requestId++,\n                isReady)\n                break;\n            case 'groupBy':\n                viewport.groupByStatus = 'pending';\n                this.sendIfReady({\n                    type : Message.CHANGE_VP,\n                    viewPortId : viewport.serverViewportId,\n                    columns : [ \"ric\", \"description\", \"currency\", \"exchange\", \"lotSize\", \"bid\", \"ask\", \"last\", \"open\", \"close\", \"scenario\" ],\n                    sort : {\n                        sortDefs: []\n                    },\n                    groupBy : message.groupBy.map(([columnName]) => columnName),\n                    filterSpec : null\n                },\n                _requestId++,\n                isReady)\n                break;\n\n            case 'sort':\n                this.sendIfReady({\n                    type : Message.CHANGE_VP,\n                    viewPortId : viewport.serverViewportId,\n                    columns : [ \"ric\", \"description\", \"currency\", \"exchange\", \"lotSize\", \"bid\", \"ask\", \"last\", \"open\", \"close\", \"scenario\" ],\n                    sort : {\n                        sortDefs: message.sortCriteria.map(([column, dir='asc']) => ({column, sortType: SORT[dir]}))\n                    },\n                    groupBy : [ ],\n                    filterSpec : null\n                },\n                _requestId++,\n                isReady)\n                break;\n\n            case 'filterQuery':\n                this.sendIfReady({\n                    type : Message.CHANGE_VP,\n                    viewPortId : viewport.serverViewportId,\n                    columns : viewport.columns,\n                    sort : null, // need to preserve\n                    groupBy : [ ],\n                    filterSpec : {filter: message.filter}\n                },\n                _requestId++,\n                isReady)\n                break;\n\n            case 'select':\n                this.sendIfReady({\n                    type : Message.SET_SELECTION,\n                    vpId : viewport.serverViewportId,\n                    selection: [message.idx]\n                },\n                _requestId++,\n                isReady)\n\n                break;\n\n            case \"createLink\": {\n                const {parentVpId, childVpId, parentColumnName, childColumnName} = message;\n                this.sendIfReady({\n                    type : Message.CREATE_VISUAL_LINK,\n                    parentVpId,\n                    childVpId,\n                    parentColumnName,\n                    childColumnName\n                },\n                _requestId++,\n                isReady)\n            }\n            break;\n\n            default:\n                console.log(`Vuu ServerProxy Unexpected message from client ${JSON.stringify(message)}`)\n\n            }\n\n    }\n\n    sendMessageToServer(body, requestId=_requestId++) {\n        // const { clientId } = this.connection;\n        this.connection.send({\n            requestId,\n            sessionId : this.sessionId,\n            token : this.loginToken,\n            user : \"user\",\n            module : \"CORE\",\n            body\n        });\n    }\n\n    sendIfReady(message, requestId, isReady=true) {\n        // TODO implement the message queuing in remote data view\n        if (isReady) {\n            this.sendMessageToServer(message, requestId);\n        } else {\n            // TODO need to make sure we keep the requestId\n            this.queuedRequests.push(message);\n        }\n\n        return isReady;\n\n    }\n\n    disconnected(){\n        logger.log(`disconnected`);\n        for (let [viewport, {postMessageToClient}] of Object.entries(this.viewportStatus)) {\n            postMessageToClient({\n                rows: [],\n                size: 0,\n                range: {lo:0, hi:0}\n            })\n        }\n    }\n\n    resubscribeAll(){\n        logger.log(`resubscribe all`)\n        // for (let [viewport, {request}] of Object.entries(this.viewportStatus)) {\n        //     this.sendMessageToServer({\n        //         type: API.addSubscription,\n        //         ...request\n        //     });\n        // }\n    }\n\n    async authenticate(username, password){\n        return new Promise((resolve, reject) => {\n            this.sendMessageToServer({type : Message.AUTH, username, password}, \"\");\n            this.pendingAuthentication = {resolve, reject}\n        })\n    }\n\n    authenticated(token){\n        this.loginToken = token;\n        this.pendingAuthentication.resolve(token);\n    }\n\n    async login(){\n        return new Promise((resolve, reject) => {\n            this.sendMessageToServer({type : Message.LOGIN, token: this.loginToken, user: \"user\"}, \"\");\n            this.pendingLogin = {resolve, reject}\n        })\n    }\n\n    loggedIn(sessionId){\n        this.sessionId = sessionId;\n        this.pendingLogin.resolve(sessionId);\n    }\n\n    subscribe(message, callback) {\n      logger.log(`subscribe ${JSON.stringify(message)}`)\n        // the session should live at the connection level\n        const isReady = this.sessionId !== \"\";\n        const {viewport, tablename, columns, range: {lo, hi}} = message;\n        this.viewportStatus[viewport] = {\n            clientViewportId: viewport,\n            status: 'subscribing',\n            request: message,\n        }\n\n        // use client side viewport as request id, so that when we process the response,\n        // with the serverside viewport we can establish a mapping between the two\n        this.sendIfReady({\n            type : Message.CREATE_VP,\n            table : tablename,\n            range : {\n                from : lo,\n                to : hi\n            },\n            columns,\n            sort : {\n                sortDefs : [ ]\n            },\n            groupBy : [ ],\n            filterSpec : {\n                filter : \"\"\n            }\n        }, viewport, isReady)\n\n    }\n\n    subscribed(/* server message */ clientViewportId, message) {\n        const viewport = this.viewportStatus[clientViewportId];\n        const { viewPortId: serverViewportId, columns } = message;\n\n        if (viewport) {\n            // key the viewport on server viewport ID as well as client id\n            this.viewportStatus[serverViewportId] = viewport;\n\n            viewport.status = 'subscribed';\n            viewport.serverViewportId = serverViewportId;\n            viewport.columns = columns;\n\n            const {table, range, sort, groupBy, filterSpec} = message;\n            viewport.spec = {\n                table, range, columns, sort, groupBy, filterSpec\n            };\n\n            // TODO don't think we need to support queued requests any more ? We block\n            // now until connection is established\n            const byViewport = vp => item => item.viewport === vp;\n            const byMessageType = msg => msg.type === Message.CHANGE_VP;\n            const [messagesForThisViewport, messagesForOtherViewports] = partition(this.queuedRequests, byViewport(viewport));\n            const [rangeMessages, otherMessages] = partition(messagesForThisViewport, byMessageType);\n\n            this.queuedRequests = messagesForOtherViewports;\n            rangeMessages.forEach(msg => {\n                range = msg.range;\n            });\n\n            if (otherMessages.length) {\n                console.log(`we have ${otherMessages.length} messages still to process`);\n            }\n\n            this.postMessageToClient({type: \"subscribed\", clientViewportId, serverViewportId, columns})\n        }\n    }\n\n    unsubscribe(){\n        console.log(`%cserver-proxy<VUU> unsubscribe`,'color: blue;font-weight:bold;')\n    }\n\n    destroy(){\n        console.log(`%cserver-proxy<VUU> destroy`,'color: blue;font-weight:bold;')\n    }\n\n    batchByViewport(rows){\n        const viewports = {};\n        for (let i=0; i < rows.length; i++){\n            const {viewPortId, vpSize, rowIndex, rowKey, sel: isSelected, updateType, ts, data} = rows[i];\n            //TODO it is probably more efficient to do the groupBy checks at next level\n            const {groupByStatus} = this.viewportStatus[viewPortId];\n            if (groupByStatus === 'pending' && rowKey !== '$root'){\n                console.log(`ignoring ${updateType} message whilst waiting for grouped rows`);\n            } else if (groupByStatus === 'pending' && rowKey === '$root'){\n                this.viewportStatus[viewPortId].groupByStatus = 'complete';\n                console.log(`groupBy in place, $root received`)\n            } else if (updateType === Message.UPDATE){\n                const record = (viewports[viewPortId] || (viewports[viewPortId] = {viewPortId, size: vpSize, rows: []}));\n                if (groupByStatus === 'complete'){\n                    let [depth, expanded, path, unknown, label, count, ...rest] = data;\n                    if (!expanded){\n                        depth = -depth;\n                    }\n                    rest.push(rowIndex-1, 0, depth, count, path, 0)\n                    record.rows.push(rest);\n                } else {\n                    // TODO populate the key field correctly, i.e. don't just assume first field\n                    if (isSelected){\n                        console.log(`row ${rowIndex} is selected`)\n                    }\n                    record.rows.push([rowIndex, 0, 0, 0, data[0],isSelected,,,,,].concat(data));\n                }\n            } else if (updateType === Message.SIZE){\n                // console.log(`size record ${JSON.stringify(rows[i],null,2)}`)\n            }\n        }\n        return Object.values(viewports);\n    }\n\n    handleMessageFromServer(message) {\n        if (!message.body){\n            console.error('invalid message', message)\n            return;\n        } else if (message.body.type === Message.HB){\n            this.sendMessageToServer({type : Message.HB_RESP, ts : +(new Date())},\"NA\");\n            return;\n        }\n\n        const {requestId, sessionId, token, body} = message;\n\n        switch (body.type) {\n            case Message.AUTH_SUCCESS:\n                return this.authenticated(token);\n            case Message.LOGIN_SUCCESS:\n                return this.loggedIn(sessionId);\n            case Message.CREATE_VP_SUCCESS:\n                return this.subscribed(requestId, body);\n            case Message.CHANGE_VP_RANGE_SUCCESS:\n            case Message.CHANGE_VP_SUCCESS:\n              logger.log(body.type)\n                break;\n            case Message.CREATE_VISUAL_LINK_SUCCESS:\n            case Message.SET_SELECTION_SUCCESS:\n                console.log(`message received ${body.type}`)\n                break;\n            case Message.TABLE_ROW: {\n                const {batch, isLast, timestamp, rows} = body;\n                const rowsByViewport = this.batchByViewport(rows);\n                rowsByViewport.forEach(({viewPortId, size, rows}) => {\n                    const {clientViewportId} = this.viewportStatus[viewPortId];\n                    rows.sort(byRowIndex)\n                    const clientMessage = {\n                        type: \"table-row\",\n                        clientViewportId,\n                        size,\n                        offset: 0,\n                        range: {lo: 0, hi: 27},\n                        rows\n                    }\n                    this.postMessageToClient(clientMessage);\n                })\n            }\n\n                break;\n            case \"ERROR\":\n            console.error(body.msg)\n            break;\n            // case Message.FILTER_DATA:\n            // case Message.SEARCH_DATA:\n            //     const { data: filterData } = message;\n            //     // const { rowset: data } = subscription.putData(type, filterData);\n\n            //     // if (data.length || filterData.size === 0) {\n            //     this.postMessageToClient({\n            //         type,\n            //         viewport,\n            //         [type]: filterData\n            //     });\n            //     // }\n\n            //     break;\n\n            default:\n                this.postMessageToClient(message.body);\n\n        }\n\n    }\n\n}\n\n","import connect from '@vuu-ui/data-remote/src/remote-websocket-connection';\nimport { ServerProxy } from '@vuu-ui/data-remote/src/servers/vuu/server-proxy';\nimport { createLogger, logColor } from '@heswell/utils/src/logging';\n\nconst logger = createLogger('Worker', logColor.brown);\n\nlogger.log('hello from the worker')\n\nlet server;\n\nasync function connectToServer(url) {\n\n  const connection = await connect(\n    url,\n    // if this was called during connect, we would get a ReferenceError, but it will\n    // never be called until subscriptions have been made, so this is safe.\n    msg => server.handleMessageFromServer(msg),\n    msg => logger.log(JSON.stringify(msg))\n    // msg => {\n    //   onConnectionStatusMessage(msg);\n    //   if (msg.status === 'disconnected'){\n    //     server.disconnected();\n    //   } else if (msg.status === 'reconnected'){\n    //     server.resubscribeAll();\n    //   }\n    // }\n  );\n  server = new ServerProxy(connection, msg => postMessage(msg));\n  // How do we handle authentication, login\n  if (typeof server.authenticate === 'function') {\n    await server.authenticate('steve', 'pword');\n  }\n  if (typeof server.login === 'function') {\n    await server.login();\n  }\n\n}\n\nconst handleMessageFromServer = message => {\n}\n\nconst handleMessageFromClient = async ({ data: message }) => {\n  switch (message.type) {\n    case 'connect':\n      await connectToServer(message.url);\n      postMessage({ type: 'connected' })\n      break;\n    case 'subscribe':\n      server.subscribe(message);\n      break;\n    default:\n      server.handleMessageFromClient(message);\n    }\n}\n\n/* eslint-disable-next-line no-restricted-globals */\nself.addEventListener('message',handleMessageFromClient);\n\n\n/* eslint-disable-next-line no-restricted-globals */\n// self.addEventListener('message', async function ({ data: message }) {\n//   switch (message.type) {\n//     case 'connect':\n//       logger.log(`connect to ${message.url}`)\n//       await connectToServer(message.url);\n//       postMessage({ type: 'connected' })\n//       break;\n//     case 'subscribe':\n//       logger.log(`subscribe ${JSON.stringify(message)}`)\n//       server.subscribe(message, handleMessageFromServer);\n//       break;\n\n    // case 'setRange':{\n    //     const result = dataStore.setRange(message.range);\n    //     postMessage(result);\n    // }\n    // break;\n\n    // case 'groupBy':{\n    //     const result = dataStore.groupBy(message.groupBy);\n    //     postMessage(result);\n    // }\n    // break;\n\n    // case 'rate':\n    //     if (message.value > 3){\n    //        renderInterval += 1;\n    //         // console.log(`current messages/render = ${message.value} increasing renderInterval to ${renderInterval}`);\n    //     } else if (message.value < 2){\n    //         renderInterval -= 1;\n    //     // console.log(`current messages/render = ${message.value} reducing renderInterval to ${renderInterval}`);\n    //     }\n    // break;\n\n    // case 'startStress':\n    //     console.log('starting stress test');\n    //     sendMessagesNoThrottle();\n    //     break;\n    // case 'startLoad':\n    //     loadTestRunning = true;\n    //     console.log('starting load test');\n    //     sendMessagesWithThrottle();\n    //     break;\n    // case 'stopTest':\n    //     console.log('stopping test');\n    //     loadTestRunning = false;\n    //     break;\n  //   default:\n  //     console.log('unknown message type ' + message.type);\n  //     break;\n  // }\n// });\n\npostMessage({ type: \"ready\" })\n"],"names":["logger","Message.CHANGE_VP_RANGE","Message.CHANGE_VP","Message.SET_SELECTION","Message.CREATE_VISUAL_LINK","Message.AUTH","Message.LOGIN","Message.CREATE_VP","Message.UPDATE","Message.HB","Message.HB_RESP","Message.AUTH_SUCCESS","Message.LOGIN_SUCCESS","Message.CREATE_VP_SUCCESS","Message.CHANGE_VP_RANGE_SUCCESS","Message.CHANGE_VP_SUCCESS","Message.CREATE_VISUAL_LINK_SUCCESS","Message.SET_SELECTION_SUCCESS","Message.TABLE_ROW"],"mappings":"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"}