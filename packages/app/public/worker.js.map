{"version":3,"file":"worker.js","sources":["../../utils/src/logging.js","../../data-remote/src/remote-websocket-connection.js","../../data-remote/src/servers/vuu/messages.js","../../utils/src/column-utils.js","../../data-remote/src/servers/vuu/viewport.js","../../data-remote/src/servers/vuu/server-proxy.js","../../remote-worker/src/worker.js"],"sourcesContent":["export const logColor = {\n  plain : 'color: black; font-weight: normal',\n  blue : 'color: blue; font-weight: bold',\n  brown : 'color: brown; font-weight: bold',\n  green : 'color: green; font-weight: bold',\n}\n\nconst {plain} = logColor;\nexport const createLogger = (source, labelColor=plain, msgColor=plain) => ({\n  log: (msg, args='') => console.log(`[${Date.now()}]%c[${source}] %c${msg}`,labelColor, msgColor, args),\n  warn: (msg) => console.warn(`[${source}] ${msg}`)\n})\n","import { createLogger, logColor} from '@heswell/utils/src/logging';\nimport { ConnectionStatus } from './messages';\n\nconst logger = createLogger('WebsocketConnection', logColor.brown);\n\nconst connectionAttempts = {};\n\nconst setWebsocket = Symbol('setWebsocket');\nconst connectionCallback = Symbol('connectionCallback');\n\nexport default async function connect(connectionString, callback, connectionStatusCallback) {\n    return makeConnection(connectionString, msg => {\n      const {type} = msg;\n      if (type === 'connection-status'){\n        connectionStatusCallback(msg);\n      } else if (type === 'HB'){\n          console.log(`swallowing HB in WebsocketConnection`);\n      } else if (type === 'Welcome'){\n        // Note: we are actually resolving the connection before we get this session message\n        logger.log(`Session established clientId: ${msg.clientId}`)\n      } else {\n        callback(msg)\n      }\n    });\n}\n\nasync function reconnect(connection){\n  console.log(`reconnect connection at ${connection.url}`)\n  makeConnection(connection.url, connection[connectionCallback], connection);\n}\n\nasync function makeConnection(url, callback, connection){\n\n  const connectionStatus = connectionAttempts[url] || (connectionAttempts[url] = {\n    attemptsRemaining: 5,\n    status: 'not-connected'\n  });\n\n  try {\n    callback({type: 'connection-status', status: 'connecting'});\n    const reconnecting = typeof connection !== 'undefined';\n    const ws = await createWebsocket(url);\n\n    console.log(`%c⚡ %c${url}`, 'font-size: 24px;color: green;font-weight: bold;','color:green; font-size: 14px;');\n\n    if (reconnecting){\n      connection[setWebsocket](ws);\n    } else {\n      connection = new Connection(ws, url, callback);\n    }\n\n    const status = reconnecting ? 'reconnected' : 'connected';\n\n    callback({type: 'connection-status', status});\n\n    connection.status = status;\n\n    return connection;\n\n  } catch(evt){\n    const retry = --connectionStatus.attemptsRemaining > 0;\n    callback({type: 'connection-status', status: 'not-connected', reason: 'failed to connect', retry});\n    if (retry){\n      return makeConnectionIn(url, callback, connection, 10000);\n    }\n  }\n}\n\nconst makeConnectionIn = (url, callback, connection, delay) => new Promise(resolve => {\n  setTimeout(() => {\n    resolve(makeConnection(url, callback, connection))\n  }, delay)\n});\n\nconst createWebsocket = connectionString => new Promise((resolve, reject) => {\n  //TODO add timeout\n    const ws = new WebSocket('ws://' + connectionString);\n    ws.onopen = () => resolve(ws);\n    ws.onerror = evt => reject(evt);\n});\n\n\nclass Connection {\n\n  constructor(ws, url, callback) {\n\n    this.url = url;\n    this[connectionCallback] = callback;\n    this[setWebsocket](ws);\n    this.status = 'ready';\n\n  }\n\n  reconnect(){\n    reconnect(this);\n  }\n\n  [setWebsocket](ws){\n\n    const callback = this[connectionCallback];\n\n    ws.onmessage = evt => {\n      const message = JSON.parse(evt.data);\n      // console.log(`%c<<< [${new Date().toISOString().slice(11,23)}]  (WebSocket) ${message.type || JSON.stringify(message)}`,'color:white;background-color:blue;font-weight:bold;');\n      if (Array.isArray(message)){\n        message.map(callback)\n      } else {\n        callback(message);\n      }\n    }\n\n    ws.onerror = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: red;font-weight: bold;','color:red; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'error'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    ws.onclose = evt => {\n      console.log(`%c⚡ %c${this.url}`, 'font-size: 24px;color: orange;font-weight: bold;','color:orange; font-size: 14px;');\n      callback({type: 'connection-status', status: 'disconnected', reason: 'close'});\n      if (this.status !== 'closed'){\n        reconnect(this);\n        this.send = queue;\n      }\n    }\n\n    const send = msg => {\n      // console.log(`%c>>>  (WebSocket) ${JSON.stringify(msg)}`,'color:blue;font-weight:bold;');\n      ws.send(JSON.stringify(msg));\n    }\n\n    const warn = msg => {\n      logger.log(`Message cannot be sent, socket closed: ${msg.type}`);\n    }\n\n    const queue = msg => {\n      console.log(`queuing message ${JSON.stringify(msg)} until websocket reconnected`)\n    }\n\n    const abort = msg => {\n      throw Error('This connection is dead');\n    }\n\n    this.send = send;\n\n    this.close = () => {\n      console.log('[Connection] close websocket')\n      this.status = 'closed';\n      ws.close();\n      this.send = warn;\n    }\n\n  }\n\n}\n\n","export const AUTH = 'AUTH';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const CREATE_VP = 'CREATE_VP';\nexport const CREATE_VP_SUCCESS = 'CREATE_VP_SUCCESS';\nexport const CHANGE_VP = 'CHANGE_VP';\nexport const CHANGE_VP_SUCCESS = 'CHANGE_VP_SUCCESS';\nexport const CREATE_VISUAL_LINK = 'CREATE_VISUAL_LINK';\nexport const CREATE_VISUAL_LINK_SUCCESS = 'CREATE_VISUAL_LINK_SUCCESS';\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_SELECTION_SUCCESS = 'SET_SELECTION_SUCCESS';\nexport const CHANGE_VP_RANGE = 'CHANGE_VP_RANGE';\nexport const CHANGE_VP_RANGE_SUCCESS = 'CHANGE_VP_RANGE_SUCCESS';\nexport const TABLE_ROW = 'TABLE_ROW';\nexport const HB = \"HB\";\nexport const HB_RESP = \"HB_RESP\";\nexport const OPEN_TREE_NODE = \"OPEN_TREE_NODE\";\nexport const OPEN_TREE_SUCCESS = \"OPEN_TREE_SUCCESS\";\nexport const OPEN_TREE_REJECT = \"OPEN_TREE_REJECT\";\nexport const CLOSE_TREE_NODE = \"CLOSE_TREE_NODE\";\nexport const CLOSE_TREE_SUCCESS = \"CLOSE_TREE_SUCCESS\";\nexport const CLOSE_TREE_REJECT = \"CLOSE_TREE_REJECT\";\nexport const ENABLE_VP = \"ENABLE_VP\";\nexport const ENABLE_VP_SUCCESS = \"ENABLE_VP_SUCCESS\";\nexport const ENABLE_VP_REJECT = \"ENABLE_VP_REJECT\";\nexport const DISABLE_VP = \"DISABLE_VP\";\nexport const DISABLE_VP_SUCCESS = \"DISABLE_VP_SUCCESS\";\nexport const DISABLE_VP_REJECT = \"DISABLE_VP_REJECT\";\n\nexport const SIZE = 'SIZE'\nexport const UPDATE = 'U'\n","import {\n  functor,\n  overrideColName\n} from './filter-utils';\n\nconst SORT_ASC = 'asc';\n\nexport function mapSortCriteria(sortCriteria, columnMap, metadataOffset=0) {\n  return sortCriteria.map(s => {\n      if (typeof s === 'string') {\n          return [columnMap[s] + metadataOffset, 'asc'];\n      } else if (Array.isArray(s)) {\n          const [columnName, sortDir] = s;\n          return [columnMap[columnName] + metadataOffset, sortDir || SORT_ASC];\n      } else {\n          throw Error('columnUtils.mapSortCriteria invalid input');\n      }\n\n  });\n}\n\nexport const toKeyedColumn = (column, key) =>\n  typeof column === 'string'\n      ? { key, name: column }\n      : typeof column.key === 'number'\n          ? column\n          : {...column, key};\n\nexport function buildColumnMap(columns){\n  const start = metadataKeys.count;\n  if (columns){\n      return columns.reduce((map, column, i) => {\n          if (typeof column === 'string'){\n              map[column] = start + i;\n          } else if (typeof column.key === 'number') {\n              map[column.name] = column.key;\n          } else {\n              map[column.name] = start + i;\n          }\n          return map;\n      },{})\n  } else {\n      return null;\n  }\n}\n\nexport function projectUpdates(updates){\n    const results = [];\n    const metadataOffset = metadataKeys.count - 2;\n    for (let i=0;i<updates.length; i+=3){\n        results[i] = updates[i] + metadataOffset;\n        results[i+1] = updates[i+1];\n        results[i + 2] = updates[i+2];\n    }\n    return results;\n}\n\nexport function projectColumns(tableRowColumnMap, columns){\n  const columnCount = columns.length;\n  const {IDX, RENDER_IDX, DEPTH, COUNT, KEY, SELECTED, count} = metadataKeys;\n  return (startIdx, offset, selectedRows=[]) => (row,i) => {\n      // selectedRows are indices of rows within underlying dataset (not sorted or filtered)\n      // row is the original row from this set, with original index in IDX pos, which might\n      // be overwritten with a different value below if rows are sorted/filtered\n      const baseRowIdx = row[IDX];\n      const out = [];\n      for (let i=0; i < columnCount;i++){\n          const colIdx = tableRowColumnMap[columns[i].name];\n          out[count+i] = row[colIdx];\n      }\n\n      out[IDX] = startIdx + i + offset;\n      out[RENDER_IDX] = 0;\n      out[DEPTH] = 0;\n      out[COUNT] = 0;\n      out[KEY] = row[tableRowColumnMap.KEY];\n      out[SELECTED] = selectedRows.includes(baseRowIdx) ? 1 : 0;\n      return out;\n  }\n}\n\nexport function projectColumnsFilter(map, columns, meta, filter){\n  const length = columns.length;\n  const {IDX, RENDER_IDX, DEPTH, COUNT, KEY, SELECTED} = meta;\n\n  // this is filterset specific where first col is always value\n  const fn = filter ? functor(map, overrideColName(filter, 'name'))  : () => true;\n  return startIdx => (row,i) => {\n      const out = [];\n      for (let i=0;i<length;i++){\n          const colIdx = map[columns[i].name];\n          out[i] = row[colIdx];\n      }\n      // assume row[0] is key for now\n      // out.push(startIdx+i, 0, 0, row[0]);\n      out[IDX] = startIdx+i;\n      out[RENDER_IDX] = 0;\n      out[DEPTH] = 0;\n      out[COUNT] = 0;\n      out[KEY] = row[map.KEY];\n      out[SELECTED] = fn(row) ? 1 : 0;\n\n      return out;\n  }\n}\n\nexport function getFilterType(column){\n  return column.filter || filterTypeFromColumnType(column);\n}\n\n// {name: 'Price', 'type': {name: 'price'}, 'aggregate': 'avg'},\n// {name: 'MarketCap', 'type': {name: 'number','format': 'currency'}, 'aggregate': 'sum'},\n\nconst filterTypeFromColumnType = column => {\n    // TODO add remaining filter types\n    switch (getDataType(column)){\n        case 'number': return 'number'\n        default: return 'set';\n    }\n\n}\n\nexport function getDataType({type=null}){\n  if (type === null){\n      return 'set';\n  } else if (typeof type === 'string'){\n      return type;\n  } else {\n      switch(type.name){\n          case 'price':\n              return 'number';\n          default:\n              return type.name;\n      }\n  }\n\n}\n\nexport const metadataKeys = {\n    IDX: 0,\n    RENDER_IDX: 1,\n    IS_LEAF: 2,\n    IS_EXPANDED: 3,\n    DEPTH: 4,\n    COUNT: 5,\n    KEY: 6,\n    SELECTED: 7,\n    // PARENT_IDX: 8,\n    // IDX_POINTER: 9,\n    // FILTER_COUNT: 10,\n    // NEXT_FILTER_IDX: 11,\n    count: 8\n}\n\n","import { metadataKeys } from \"@heswell/utils/src/column-utils\";\nimport * as Message from './messages';\n\nconst { IDX, SELECTED } = metadataKeys;\nconst EMPTY_ARRAY = [];\nconst SORT = { asc: 'D', dsc: 'A' };\n\nexport default class Viewport {\n\n  constructor(clientViewportId, request, status = 'subscribing') {\n    this.clientViewportId = clientViewportId;\n    this.request = request;\n    this.status = status;\n    this.serverViewportId = null;\n    this.pendingOperations = []\n    this.columns = null;\n    this.table = null;\n    this.range = null;\n    this.sort = null;\n    this.groupBy = null;\n    this.filterSpec = null;\n    this.pendingOperations = new Map();\n    this.isTree = false;\n    this.selection = [];\n  }\n\n  subscribe({ viewPortId, columns, table, range, sort, groupBy, filterSpec }) {\n    this.serverViewportId = viewPortId;\n    this.status = 'subscribed';\n    this.columns = columns;\n    this.table = table;\n    this.range = range;\n    this.sort = sort;\n    this.groupBy = groupBy;\n    this.filterSpec = filterSpec;\n    this.isTree = groupBy && groupBy.length > 0;\n\n    console.log(`%cViewport subscribed\n      clientVpId: ${this.clientViewportId}\n      serverVpId: ${this.serverViewportId}\n      table: ${this.table}\n      columns: ${columns.join(',')}\n      range: ${JSON.stringify(range)}\n      sort: ${JSON.stringify(sort)}\n      groupBy: ${JSON.stringify(groupBy)}\n      filterSpec: ${JSON.stringify(filterSpec)}\n    `, 'color: blue')\n  }\n\n  awaitOperation(requestId, type) {\n    console.log(`await ${type} operation ${requestId}`)\n    //TODO set uip a timeout mechanism here\n    this.pendingOperations.set(requestId, type);\n  }\n\n  // Return a message if we need to communicate this to client UI\n  completeOperation(requestId) {\n    const { clientViewportId, pendingOperations } = this;\n    const { type, data } = pendingOperations.get(requestId);\n    pendingOperations.delete(requestId);\n    if (type === 'groupBy') {\n      this.isTree = true;\n      this.groupBy = data;\n      return { clientViewportId, type, groupBy: data };\n    } else if (type === \"groupByClear\") {\n      this.isTree = false;\n      this.groupBy = [];\n      return { clientViewportId, type: \"groupBy\", groupBy: null };\n    } else if (type === 'filter') {\n      this.filterSpec = { filter: data };\n      return { clientViewportId, type, filter: data };\n    } else if (type === 'sort') {\n      this.sort = { sortDefs: data };\n      return { clientViewportId, type, sort: data };\n    } else if (type === \"selection\") {\n      this.selection = data;\n    } else if (type === \"disable\") {\n      this.suspended = true; // assuming its _SUCCESS, of cource\n    } else if (type === \"enable\") {\n      this.suspended = false;\n    }\n  }\n\n\n  enable(requestId) {\n    this.awaitOperation(requestId, { type: \"enable\" });\n    return {\n      type: Message.ENABLE_VP,\n      viewPortId: this.serverViewportId,\n    }\n  }\n\n  disable(requestId) {\n    this.awaitOperation(requestId, { type: \"disable\" });\n    return {\n      type: Message.DISABLE_VP,\n      viewPortId: this.serverViewportId,\n    }\n  }\n\n\n  filterRequest(requestId, filter) {\n    this.awaitOperation(requestId, { type: \"filter\", data: filter });\n    return this.createRequest({ filterSpec: { filter } });\n  }\n\n  sortRequest(requestId, sortDefs) {\n    this.awaitOperation(requestId, { type: \"sort\", data: sortDefs });\n    return this.createRequest({ sort: { sortDefs } })\n  }\n\n  groupByRequest(requestId, groupBy=EMPTY_ARRAY) {\n    const type = groupBy === EMPTY_ARRAY ? \"groupByClear\" : \"groupBy\";\n    this.awaitOperation(requestId, { type, data: groupBy });\n    return this.createRequest({ groupBy })\n  }\n\n  selectRequest(requestId, row, rangeSelect, keepExistingSelection) {\n    const singleSelect = !rangeSelect && !keepExistingSelection;\n    const selection = row[SELECTED]\n      ? singleSelect\n        ? []\n        : this.selection.filter(idx => idx !== row[IDX])\n      : keepExistingSelection\n        ? this.selection.concat(row[IDX])\n        : [row[IDX]];\n\n    this.awaitOperation(requestId, { type: \"selection\", data: selection });\n    return {\n      type: Message.SET_SELECTION,\n      vpId: this.serverViewportId,\n      selection\n    }\n  }\n\n  createRequest(params) {\n    return {\n      type: Message.CHANGE_VP,\n      viewPortId: this.serverViewportId,\n      columns: this.columns,\n      sort: this.sort,\n      groupBy: this.groupBy,\n      filterSpec: this.filterSpec,\n      ...params\n    }\n  }\n\n}\n\n","import * as Message from './messages';\nimport Viewport from \"./viewport\";\n\nconst { SIZE, UPDATE } = Message;\n\nconst byRowIndex = (row1, row2) => row1[0] - row2[0];\n\nlet _requestId = 1;\nconst nextRequestId = () => `${_requestId++}`;\n\nconst logger = console;\n\nexport class ServerProxy {\n\n  constructor(connection, callback) {\n    this.connection = connection;\n    this.postMessageToClient = callback;\n    this.queuedRequests = [];\n    this.viewportStatus = {};\n\n    this.queuedRequests = [];\n    this.loginToken = \"\";\n    this.sessionId = \"\";\n    this.pendingLogin = null;\n    this.pendingAuthentication = null;\n\n  }\n\n  handleMessageFromClient(message) {\n\n    const viewport = this.viewportStatus[message.viewport];\n    if (!viewport) {\n      switch (message.type) {\n        case \"GET_TABLE_LIST\":\n          this.sendMessageToServer({ type: \"GET_TABLE_LIST\" }, message.requestId)\n          break;\n        case \"GET_TABLE_META\":\n          this.sendMessageToServer({ type: \"GET_TABLE_META\", table: message.table }, message.requestId)\n          break;\n        default:\n      }\n      return;\n    }\n    const isReady = viewport.status === 'subscribed';\n\n    switch (message.type) {\n      case 'setViewRange':\n        this.sendIfReady({\n          type: Message.CHANGE_VP_RANGE,\n          viewPortId: viewport.serverViewportId,\n          from: message.range.lo,\n          to: message.range.hi\n        },\n          _requestId++,\n          isReady)\n        break;\n\n      case 'sort': {\n        const requestId = nextRequestId();\n        const request = viewport.sortRequest(requestId, message.sortCriteria)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break\n\n      case 'groupBy': {\n        const requestId = nextRequestId();\n        const request = viewport.groupByRequest(requestId, message.groupBy)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'filterQuery': {\n        const requestId = nextRequestId();\n        const request = viewport.filterRequest(requestId, message.filter)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'select': {\n        const requestId = nextRequestId();\n        const { row, rangeSelect, keepExistingSelection } = message;\n        const request = viewport.selectRequest(requestId, row, rangeSelect, keepExistingSelection)\n        this.sendIfReady(request, requestId, isReady)\n      }\n        break;\n\n      case 'disable': {\n        const requestId = nextRequestId();\n        const request = viewport.disable(requestId)\n        this.sendIfReady(request, requestId, isReady)\n      }\n      break;\n\n      case 'enable': {\n        const requestId = nextRequestId();\n        const request = viewport.enable(requestId)\n        this.sendIfReady(request, requestId, isReady)\n      }\n      break;\n\n      case 'openTreeNode':\n        this.sendIfReady({\n          type: Message.OPEN_TREE_NODE,\n          vpId: viewport.serverViewportId,\n          treeKey: message.key\n        },\n          _requestId++,\n          isReady)\n        break;\n\n      case 'closeTreeNode':\n        this.sendIfReady({\n          type: Message.CLOSE_TREE_NODE,\n          vpId: viewport.serverViewportId,\n          treeKey: message.key\n        },\n          _requestId++,\n          isReady)\n\n        break;\n\n\n      case \"createLink\": {\n        const { parentVpId, childVpId, parentColumnName, childColumnName } = message;\n        this.sendIfReady({\n          type: Message.CREATE_VISUAL_LINK,\n          parentVpId,\n          childVpId,\n          parentColumnName,\n          childColumnName\n        },\n          _requestId++,\n          isReady)\n      }\n        break;\n\n      default:\n        console.log(`Vuu ServerProxy Unexpected message from client ${JSON.stringify(message)}`)\n\n    }\n\n  }\n\n  sendMessageToServer(body, requestId = _requestId++) {\n    // const { clientId } = this.connection;\n    this.connection.send({\n      requestId,\n      sessionId: this.sessionId,\n      token: this.loginToken,\n      user: \"user\",\n      module: \"CORE\",\n      body\n    });\n  }\n\n  sendIfReady(message, requestId, isReady = true) {\n    // TODO implement the message queuing in remote data view\n    if (isReady) {\n      console.log(`sendMessageToServer ${message.type} reqId: ${requestId}`)\n      this.sendMessageToServer(message, requestId);\n    } else {\n      // TODO need to make sure we keep the requestId\n      this.queuedRequests.push(message);\n    }\n\n    return isReady;\n\n  }\n\n  disconnected() {\n    logger.log(`disconnected`);\n    for (let [viewport, { postMessageToClient }] of Object.entries(this.viewportStatus)) {\n      postMessageToClient({\n        rows: [],\n        size: 0,\n        range: { lo: 0, hi: 0 }\n      })\n    }\n  }\n\n  resubscribeAll() {\n    logger.log(`resubscribe all`)\n    // for (let [viewport, {request}] of Object.entries(this.viewportStatus)) {\n    //     this.sendMessageToServer({\n    //         type: API.addSubscription,\n    //         ...request\n    //     });\n    // }\n  }\n\n  async authenticate(username, password) {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer({ type: Message.AUTH, username, password }, \"\");\n      this.pendingAuthentication = { resolve, reject }\n    })\n  }\n\n  authenticated(token) {\n    this.loginToken = token;\n    this.pendingAuthentication.resolve(token);\n  }\n\n  async login() {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer({ type: Message.LOGIN, token: this.loginToken, user: \"user\" }, \"\");\n      this.pendingLogin = { resolve, reject }\n    })\n  }\n\n  loggedIn(sessionId) {\n    this.sessionId = sessionId;\n    this.pendingLogin.resolve(sessionId);\n  }\n\n  subscribe(message, callback) {\n    // the session should live at the connection level\n    const isReady = this.sessionId !== \"\";\n    // TODO we need to explicitly store all the viewport attributes here\n    const { viewport, tablename, columns, range: { lo, hi }, sort=[], groupBy=[], filter=\"\" } = message;\n    this.viewportStatus[viewport] = new Viewport(viewport, message);\n\n    // use client side viewport as request id, so that when we process the response,\n    // with the serverside viewport we can establish a mapping between the two\n    this.sendIfReady({\n      type: Message.CREATE_VP,\n      table: tablename,\n      range: {\n        from: lo,\n        to: hi\n      },\n      columns,\n      sort: {\n        sortDefs: sort\n      },\n      groupBy,\n      filterSpec: {\n        filter\n      }\n    }, viewport, isReady)\n\n  }\n\n  subscribed(/* server message */ clientViewportId, message) {\n    const viewport = this.viewportStatus[clientViewportId];\n    const { viewPortId: serverViewportId, columns } = message;\n    if (viewport) {\n      // key the viewport on server viewport ID as well as client id\n      this.viewportStatus[serverViewportId] = viewport;\n      viewport.subscribe(message);\n      this.postMessageToClient({ type: \"subscribed\", clientViewportId, serverViewportId, columns });\n      this.sendMessageToServer({ type: \"GET_VP_VISUAL_LINKS\", vpId: serverViewportId })\n    }\n  }\n\n  unsubscribe(clientViewportId) {\n    const viewport = this.viewportStatus[clientViewportId];\n    console.log(`%cserver-proxy<VUU> unsubscribe`, 'color: blue;font-weight:bold;')\n    if (viewport) {\n      this.sendMessageToServer({ type: \"REMOVE_VP\", viewPortId: viewport.serverViewportId })\n    } else {\n      console.error(`unable to unsubscribe from ${clientViewportId}, viewport not found`);\n    }\n\n  }\n\n  destroy() {\n    console.log(`%cserver-proxy<VUU> destroy`, 'color: blue;font-weight:bold;')\n  }\n\n  batchByViewport(rows) {\n    const viewports = {};\n    for (let i = 0; i < rows.length; i++) {\n      const { viewPortId, vpSize, rowIndex, rowKey, sel: isSelected, updateType, ts, data } = rows[i];\n      //TODO it is probably more efficient to do the groupBy checks at next level\n      const viewport = this.viewportStatus[viewPortId];\n      if (viewport) {\n\n        if (viewport.isTree && updateType === UPDATE && !rowKey.startsWith('$root')) {\n          //console.log(`ignoring ${updateType} message whilst waiting for grouped rows`);\n        } else {\n\n          if (updateType === UPDATE) {\n            const record = (viewports[viewPortId] || (viewports[viewPortId] = {\n              viewPortId,\n              size: vpSize,\n              rows: []\n            }));\n            if (viewport.isTree) {\n              let [depth, isExpanded, path, isLeaf, label, count, ...rest] = data;\n              record.rows.push([rowIndex, 0, isLeaf, isExpanded, depth, count, rowKey, isSelected].concat(rest));\n            } else {\n              record.rows.push([rowIndex, 0, true, null, null, 1, rowKey, isSelected].concat(data));\n              // We get a SIZE record when vp size changes but not in every batch - not if the size hasn't changed. Hence\n              // we take the size from TABLE. However, if size does change, it might do so part way through a batch.\n              if (vpSize > record.size) {\n                record.size = vpSize;\n              }\n            }\n          } else if (updateType === SIZE) {\n            viewports[viewPortId] = {\n              viewPortId,\n              size: vpSize,\n              rows: []\n            };\n          }\n\n        }\n\n      } else {\n        // If we are missing the viewport, bail now\n        break;\n      }\n    }\n    return Object.values(viewports);\n  }\n\n  handleMessageFromServer(message) {\n    if (!message.body) {\n      console.error('invalid message', message)\n      return;\n    } else if (message.body.type === Message.HB) {\n      this.sendMessageToServer({ type: Message.HB_RESP, ts: +(new Date()) }, \"NA\");\n      return;\n    }\n\n    const { requestId, sessionId, token, body } = message;\n\n    switch (body.type) {\n      case Message.AUTH_SUCCESS:\n        return this.authenticated(token);\n      case Message.LOGIN_SUCCESS:\n        return this.loggedIn(sessionId);\n      case Message.CREATE_VP_SUCCESS:\n        return this.subscribed(requestId, body);\n      case Message.CHANGE_VP_RANGE_SUCCESS:\n        break;\n      case Message.CHANGE_VP_SUCCESS:\n      case Message.SET_SELECTION_SUCCESS: {\n        const response = this.viewportStatus[body.viewPortId || body.vpId].completeOperation(requestId);\n        if (response) {\n          this.postMessageToClient(response);\n        }\n      }\n        break;\n      case Message.OPEN_TREE_SUCCESS:\n      case Message.CLOSE_TREE_SUCCESS:\n        console.log('successful tree operation')\n        break;\n      case Message.CREATE_VISUAL_LINK_SUCCESS:\n        break;\n      case Message.TABLE_ROW: {\n        const { batch, isLast, timestamp, rows } = body;\n        const rowsByViewport = this.batchByViewport(rows);\n        rowsByViewport.forEach(({ viewPortId, size, rows }) => {\n          const { clientViewportId } = this.viewportStatus[viewPortId];\n          rows.sort(byRowIndex)\n          const clientMessage = {\n            type: \"table-row\",\n            clientViewportId,\n            size,\n            offset: 0,\n            range: { lo: 0, hi: 27 },\n            rows\n          }\n          this.postMessageToClient(clientMessage);\n        })\n      }\n\n        break;\n      case \"REMOVE_VP_SUCCESS\": {\n        const { clientViewportId } = this.viewportStatus[body.viewPortId];\n        delete this.viewportStatus[body.viewPortId];\n        delete this.viewportStatus[clientViewportId];\n      }\n        console.log(`REMOVE_VP_SUCCESS ${JSON.stringify(body)}`)\n        break;\n      case \"TABLE_LIST_RESP\":\n        this.postMessageToClient({ type: \"TABLE_LIST_RESP\", tables: body.tables, requestId });\n        break;\n      case \"TABLE_META_RESP\":\n        this.postMessageToClient({ type: \"TABLE_META_RESP\", table: body.table, columns: body.columns, requestId });\n        break;\n      case \"VP_VISUAL_LINKS_RESP\":\n        if (body.links.length) {\n          const { clientViewportId } = this.viewportStatus[body.vpId];\n          // console.group(`links for (${this.viewportStatus[body.vpId].spec.table})`);\n          // body.links.forEach(({parentVpId, link}) => {\n          //   console.log(`link parentVpId = ${parentVpId}`);\n          //   const vp = this.viewportStatus[parentVpId];\n          //   if (vp){\n          //     console.log(`   parent table = ${vp.spec.table}`)\n          //     console.log(JSON.stringify(link,null,2))\n          //   }\n\n          // })\n          // console.groupEnd();\n          this.postMessageToClient({ type: \"VP_VISUAL_LINKS_RESP\", links: body.links, clientViewportId });\n        }\n        break;\n\n      case \"ERROR\":\n        console.error(body.msg)\n        break;\n      // case Message.FILTER_DATA:\n      // case Message.SEARCH_DATA:\n      //     const { data: filterData } = message;\n      //     // const { rowset: data } = subscription.putData(type, filterData);\n\n      //     // if (data.length || filterData.size === 0) {\n      //     this.postMessageToClient({\n      //         type,\n      //         viewport,\n      //         [type]: filterData\n      //     });\n      //     // }\n\n      //     break;\n\n      default:\n        this.postMessageToClient(message.body);\n\n    }\n\n  }\n\n}\n\n","import connect from '@vuu-ui/data-remote/src/remote-websocket-connection';\nimport { ServerProxy } from '@vuu-ui/data-remote/src/servers/vuu/server-proxy';\nimport { createLogger, logColor } from '@heswell/utils/src/logging';\n\nconst logger = createLogger('Worker', logColor.brown);\n\nlet server;\n\nasync function connectToServer(url) {\n\n  const connection = await connect(\n    url,\n    // if this was called during connect, we would get a ReferenceError, but it will\n    // never be called until subscriptions have been made, so this is safe.\n    msg => server.handleMessageFromServer(msg),\n    msg => logger.log(JSON.stringify(msg))\n    // msg => {\n    //   onConnectionStatusMessage(msg);\n    //   if (msg.status === 'disconnected'){\n    //     server.disconnected();\n    //   } else if (msg.status === 'reconnected'){\n    //     server.resubscribeAll();\n    //   }\n    // }\n  );\n  server = new ServerProxy(connection, msg => postMessage(msg));\n  // TODO handle authentication, login\n  if (typeof server.authenticate === 'function') {\n    await server.authenticate('steve', 'pword');\n  }\n  if (typeof server.login === 'function') {\n    await server.login();\n  }\n\n}\n\nconst handleMessageFromClient = async ({ data: message }) => {\n  switch (message.type) {\n    case 'connect':\n      await connectToServer(message.url);\n      postMessage({ type: 'connected' })\n      break;\n    case 'subscribe':\n      server.subscribe(message);\n      break;\n    case 'unsubscribe':\n      server.unsubscribe(message.viewport);\n      break;\n    default:\n      server.handleMessageFromClient(message);\n    }\n}\n\n/* eslint-disable-next-line no-restricted-globals */\nself.addEventListener('message',handleMessageFromClient);\n\npostMessage({ type: \"ready\" })\n"],"names":["logger","SIZE","UPDATE","Message.ENABLE_VP","Message.DISABLE_VP","Message.SET_SELECTION","Message.CHANGE_VP","Message.CHANGE_VP_RANGE","Message.OPEN_TREE_NODE","Message.CLOSE_TREE_NODE","Message.CREATE_VISUAL_LINK","Message.AUTH","Message.LOGIN","Message.CREATE_VP","Message.HB","Message.HB_RESP","Message.AUTH_SUCCESS","Message.LOGIN_SUCCESS","Message.CREATE_VP_SUCCESS","Message.CHANGE_VP_RANGE_SUCCESS","Message.CHANGE_VP_SUCCESS","Message.SET_SELECTION_SUCCESS","Message.OPEN_TREE_SUCCESS","Message.CLOSE_TREE_SUCCESS","Message.CREATE_VISUAL_LINK_SUCCESS","Message.TABLE_ROW"],"mappings":"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"}