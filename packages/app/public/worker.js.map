{"version":3,"file":"worker.js","sources":["../../utils/src/logging.js","../../data-remote/src/remote-websocket-connection.js","../../data-remote/src/test-data-collection.js","../../data-remote/src/servers/vuu/messages.js","../../utils/src/column-utils.js","../../data-remote/src/servers/vuu/keyset.js","../../utils/src/range-utils.js","../../data-remote/src/servers/vuu/buffer-range.js","../../data-remote/src/servers/vuu/array-backed-moving-window.js","../../data-remote/src/servers/vuu/new-viewport.js","../../data-remote/src/servers/vuu/new-server-proxy.js","../../remote-worker/src/worker.js"],"sourcesContent":["export const logColor = {\n  plain : 'color: black; font-weight: normal',\n  blue : 'color: blue; font-weight: bold',\n  brown : 'color: brown; font-weight: bold',\n  green : 'color: green; font-weight: bold',\n}\n\nconst {plain} = logColor;\nexport const createLogger = (source, labelColor=plain, msgColor=plain) => ({\n  log: (msg, args='') => console.log(`[${Date.now()}]%c[${source}] %c${msg}`,labelColor, msgColor, args),\n  warn: (msg) => console.warn(`[${source}] ${msg}`)\n})\n","import { createLogger, logColor } from '@heswell/utils/src/logging';\n\n// TEST_DATA_COLLECTION\n// import { saveTestData } from './test-data-collection';\n\nconst logger = createLogger('WebsocketConnection', logColor.brown);\n\nconst connectionAttempts = {};\n\nconst setWebsocket = Symbol('setWebsocket');\nconst connectionCallback = Symbol('connectionCallback');\n\nexport default async function connect(\n  connectionString,\n  callback,\n  connectionStatusCallback,\n) {\n  return makeConnection(connectionString, (msg) => {\n    const { type } = msg;\n    if (type === 'connection-status') {\n      connectionStatusCallback(msg);\n    } else if (type === 'HB') {\n      console.log(`swallowing HB in WebsocketConnection`);\n    } else if (type === 'Welcome') {\n      // Note: we are actually resolving the connection before we get this session message\n      logger.log(`Session established clientId: ${msg.clientId}`);\n    } else {\n      callback(msg);\n    }\n  });\n}\n\nasync function reconnect(connection) {\n  console.log(`reconnect connection at ${connection.url}`);\n  makeConnection(connection.url, connection[connectionCallback], connection);\n}\n\nasync function makeConnection(url, callback, connection) {\n  const connectionStatus =\n    connectionAttempts[url] ||\n    (connectionAttempts[url] = {\n      attemptsRemaining: 5,\n      status: 'not-connected',\n    });\n\n  try {\n    callback({ type: 'connection-status', status: 'connecting' });\n    const reconnecting = typeof connection !== 'undefined';\n    const ws = await createWebsocket(url);\n\n    console.log(\n      `%c⚡ %c${url}`,\n      'font-size: 24px;color: green;font-weight: bold;',\n      'color:green; font-size: 14px;',\n    );\n\n    if (reconnecting) {\n      connection[setWebsocket](ws);\n    } else {\n      connection = new Connection(ws, url, callback);\n    }\n\n    const status = reconnecting ? 'reconnected' : 'connected';\n\n    callback({ type: 'connection-status', status });\n\n    connection.status = status;\n\n    return connection;\n  } catch (evt) {\n    const retry = --connectionStatus.attemptsRemaining > 0;\n    callback({\n      type: 'connection-status',\n      status: 'not-connected',\n      reason: 'failed to connect',\n      retry,\n    });\n    if (retry) {\n      return makeConnectionIn(url, callback, connection, 10000);\n    }\n  }\n}\n\nconst makeConnectionIn = (url, callback, connection, delay) =>\n  new Promise((resolve) => {\n    setTimeout(() => {\n      resolve(makeConnection(url, callback, connection));\n    }, delay);\n  });\n\nconst createWebsocket = (connectionString) =>\n  new Promise((resolve, reject) => {\n    //TODO add timeout\n    const ws = new WebSocket('ws://' + connectionString);\n    ws.onopen = () => resolve(ws);\n    ws.onerror = (evt) => reject(evt);\n  });\n\nclass Connection {\n  constructor(ws, url, callback) {\n    this.url = url;\n    this[connectionCallback] = callback;\n    this[setWebsocket](ws);\n    this.status = 'ready';\n  }\n\n  reconnect() {\n    reconnect(this);\n  }\n\n  [setWebsocket](ws) {\n    const callback = this[connectionCallback];\n\n    ws.onmessage = (evt) => {\n      // TEST DATA COLLECTION\n        // saveTestData(evt.data, 'server');\n      const message = JSON.parse(evt.data);\n      // console.log(`%c<<< [${new Date().toISOString().slice(11,23)}]  (WebSocket) ${message.type || JSON.stringify(message)}`,'color:white;background-color:blue;font-weight:bold;');\n      callback(message);\n    };\n\n    ws.onerror = (evt) => {\n      console.log(\n        `%c⚡ %c${this.url}`,\n        'font-size: 24px;color: red;font-weight: bold;',\n        'color:red; font-size: 14px;',\n      );\n      callback({\n        type: 'connection-status',\n        status: 'disconnected',\n        reason: 'error',\n      });\n      if (this.status !== 'closed') {\n        reconnect(this);\n        this.send = queue;\n      }\n    };\n\n    ws.onclose = (evt) => {\n      console.log(\n        `%c⚡ %c${this.url}`,\n        'font-size: 24px;color: orange;font-weight: bold;',\n        'color:orange; font-size: 14px;',\n      );\n      callback({\n        type: 'connection-status',\n        status: 'disconnected',\n        reason: 'close',\n      });\n      if (this.status !== 'closed') {\n        reconnect(this);\n        this.send = queue;\n      }\n    };\n\n    const send = (msg) => {\n      // console.log(`%c>>>  (WebSocket) ${JSON.stringify(msg)}`,'color:blue;font-weight:bold;');\n      ws.send(JSON.stringify(msg));\n    };\n\n    const warn = (msg) => {\n      logger.log(`Message cannot be sent, socket closed: ${msg.type}`);\n    };\n\n    const queue = (msg) => {\n      console.log(\n        `queuing message ${JSON.stringify(msg)} until websocket reconnected`,\n      );\n    };\n\n    this.send = send;\n\n    this.close = () => {\n      console.log('[Connection] close websocket');\n      this.status = 'closed';\n      ws.close();\n      this.send = warn;\n    };\n  }\n}\n","const data = [];\n\nconst HB = /\"HB\"/;\nconst AUTH_SUCCESS = /\"AUTH_SUCCESS\"/\nconst LOGIN_SUCCESS = /\"LOGIN_SUCCESS\"/\nconst TABLE_LIST = /TABLE_LIST/\nconst TABLE_META = /TABLE_META/\n\nexport const saveTestData = (message, source) => {\n  // if (source === 'server' && (\n  //   HB.test(message) ||\n  //   AUTH_SUCCESS.test(message) ||\n  //   LOGIN_SUCCESS.test(message) ||\n  //   TABLE_LIST.test(message) ||\n  //   TABLE_META.test(message)\n  //   )) {\n  //   return;\n  // } else if (source === 'client') {\n  //   if (message.type.startsWith(\"GET_TABLE_\")){\n  //     return\n  //   }\n\n\n  //   message = JSON.stringify(message);\n  // }\n  // data.push(message);\n};\n\nexport const getTestMessages = () => {\n  const messages = data.slice();\n  data.length = 0;\n  return messages;\n};\n","export const AUTH = 'AUTH';\nexport const AUTH_SUCCESS = 'AUTH_SUCCESS';\nexport const CHANGE_VP = 'CHANGE_VP';\nexport const CHANGE_VP_SUCCESS = 'CHANGE_VP_SUCCESS';\nexport const CHANGE_VP_RANGE = 'CHANGE_VP_RANGE';\nexport const CHANGE_VP_RANGE_SUCCESS = 'CHANGE_VP_RANGE_SUCCESS';\nexport const CLOSE_TREE_NODE = \"CLOSE_TREE_NODE\";\nexport const CLOSE_TREE_SUCCESS = \"CLOSE_TREE_SUCCESS\";\nexport const CLOSE_TREE_REJECT = \"CLOSE_TREE_REJECT\";\nexport const CREATE_VISUAL_LINK = 'CREATE_VISUAL_LINK';\nexport const CREATE_VISUAL_LINK_SUCCESS = 'CREATE_VISUAL_LINK_SUCCESS';\nexport const CREATE_VP = 'CREATE_VP';\nexport const CREATE_VP_SUCCESS = 'CREATE_VP_SUCCESS';\nexport const DISABLE_VP = \"DISABLE_VP\";\nexport const DISABLE_VP_SUCCESS = \"DISABLE_VP_SUCCESS\";\nexport const DISABLE_VP_REJECT = \"DISABLE_VP_REJECT\";\nexport const ENABLE_VP = \"ENABLE_VP\";\nexport const ENABLE_VP_SUCCESS = \"ENABLE_VP_SUCCESS\";\nexport const ENABLE_VP_REJECT = \"ENABLE_VP_REJECT\";\nexport const GET_TABLE_LIST = \"GET_TABLE_LIST\";\nexport const GET_TABLE_META = \"GET_TABLE_META\";\nexport const GET_VP_VISUAL_LINKS = 'GET_VP_VISUAL_LINKS';\nexport const HB = \"HB\";\nexport const HB_RESP = \"HB_RESP\";\nexport const LOGIN = 'LOGIN';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const OPEN_TREE_NODE = \"OPEN_TREE_NODE\";\nexport const OPEN_TREE_SUCCESS = \"OPEN_TREE_SUCCESS\";\nexport const OPEN_TREE_REJECT = \"OPEN_TREE_REJECT\";\nexport const SET_SELECTION = 'SET_SELECTION';\nexport const SET_SELECTION_SUCCESS = 'SET_SELECTION_SUCCESS';\nexport const TABLE_META_RESP = 'TABLE_META_RESP';\nexport const TABLE_LIST_RESP = 'TABLE_LIST_RESP';\nexport const VP_VISUAL_LINKS_RESP = 'VP_VISUAL_LINKS_RESP';\n\nexport const TABLE_ROW = 'TABLE_ROW';\nexport const SIZE = 'SIZE'\nexport const UPDATE = 'U'\n","import {\n  functor,\n  overrideColName\n} from './filter-utils';\n\nconst SORT_ASC = 'asc';\n\nexport function mapSortCriteria(sortCriteria, columnMap, metadataOffset=0) {\n  return sortCriteria.map(s => {\n      if (typeof s === 'string') {\n          return [columnMap[s] + metadataOffset, 'asc'];\n      } else if (Array.isArray(s)) {\n          const [columnName, sortDir] = s;\n          return [columnMap[columnName] + metadataOffset, sortDir || SORT_ASC];\n      } else {\n          throw Error('columnUtils.mapSortCriteria invalid input');\n      }\n\n  });\n}\n\nexport const toKeyedColumn = (column, key) =>\n  typeof column === 'string'\n      ? { key, name: column }\n      : typeof column.key === 'number'\n          ? column\n          : {...column, key};\n\nexport function buildColumnMap(columns){\n  const start = metadataKeys.count;\n  if (columns){\n      return columns.reduce((map, column, i) => {\n          if (typeof column === 'string'){\n              map[column] = start + i;\n          } else if (typeof column.key === 'number') {\n              map[column.name] = column.key;\n          } else {\n              map[column.name] = start + i;\n          }\n          return map;\n      },{})\n  } else {\n      return null;\n  }\n}\n\nexport function projectUpdates(updates){\n    const results = [];\n    const metadataOffset = metadataKeys.count - 2;\n    for (let i=0;i<updates.length; i+=3){\n        results[i] = updates[i] + metadataOffset;\n        results[i+1] = updates[i+1];\n        results[i + 2] = updates[i+2];\n    }\n    return results;\n}\n\nexport function projectColumns(tableRowColumnMap, columns){\n  const columnCount = columns.length;\n  const {IDX, RENDER_IDX, DEPTH, COUNT, KEY, SELECTED, count} = metadataKeys;\n  return (startIdx, offset, selectedRows=[]) => (row,i) => {\n      // selectedRows are indices of rows within underlying dataset (not sorted or filtered)\n      // row is the original row from this set, with original index in IDX pos, which might\n      // be overwritten with a different value below if rows are sorted/filtered\n      const baseRowIdx = row[IDX];\n      const out = [];\n      for (let i=0; i < columnCount;i++){\n          const colIdx = tableRowColumnMap[columns[i].name];\n          out[count+i] = row[colIdx];\n      }\n\n      out[IDX] = startIdx + i + offset;\n      out[RENDER_IDX] = 0;\n      out[DEPTH] = 0;\n      out[COUNT] = 0;\n      out[KEY] = row[tableRowColumnMap.KEY];\n      out[SELECTED] = selectedRows.includes(baseRowIdx) ? 1 : 0;\n      return out;\n  }\n}\n\nexport function projectColumnsFilter(map, columns, meta, filter){\n  const length = columns.length;\n  const {IDX, RENDER_IDX, DEPTH, COUNT, KEY, SELECTED} = meta;\n\n  // this is filterset specific where first col is always value\n  const fn = filter ? functor(map, overrideColName(filter, 'name'))  : () => true;\n  return startIdx => (row,i) => {\n      const out = [];\n      for (let i=0;i<length;i++){\n          const colIdx = map[columns[i].name];\n          out[i] = row[colIdx];\n      }\n      // assume row[0] is key for now\n      // out.push(startIdx+i, 0, 0, row[0]);\n      out[IDX] = startIdx+i;\n      out[RENDER_IDX] = 0;\n      out[DEPTH] = 0;\n      out[COUNT] = 0;\n      out[KEY] = row[map.KEY];\n      out[SELECTED] = fn(row) ? 1 : 0;\n\n      return out;\n  }\n}\n\nexport function getFilterType(column){\n  return column.filter || filterTypeFromColumnType(column);\n}\n\n// {name: 'Price', 'type': {name: 'price'}, 'aggregate': 'avg'},\n// {name: 'MarketCap', 'type': {name: 'number','format': 'currency'}, 'aggregate': 'sum'},\n\nconst filterTypeFromColumnType = column => {\n    // TODO add remaining filter types\n    switch (getDataType(column)){\n        case 'number': return 'number'\n        default: return 'set';\n    }\n\n}\n\nexport function getDataType({type=null}){\n  if (type === null){\n      return 'set';\n  } else if (typeof type === 'string'){\n      return type;\n  } else {\n      switch(type.name){\n          case 'price':\n              return 'number';\n          default:\n              return type.name;\n      }\n  }\n\n}\n\nexport const metadataKeys = {\n    IDX: 0,\n    RENDER_IDX: 1,\n    IS_LEAF: 2,\n    IS_EXPANDED: 3,\n    DEPTH: 4,\n    COUNT: 5,\n    KEY: 6,\n    SELECTED: 7,\n    // PARENT_IDX: 8,\n    // IDX_POINTER: 9,\n    // FILTER_COUNT: 10,\n    // NEXT_FILTER_IDX: 11,\n    count: 8\n}\n\n","\nexport class KeySet {\n  constructor(range) {\n    this.keys = new Map();\n    this.free = [];\n    this.nextKeyValue = 0;\n    if (range){\n      const {lo, hi, from=lo, to=hi} = range;\n      this.reset({from, to});\n    }\n  }\n\n  next() {\n    if (this.free.length) {\n      return this.free.pop();\n    } else {\n      return this.nextKeyValue++;\n    }\n  }\n\n  reset({from, to}) {\n    this.keys.forEach((keyValue, rowIndex) => {\n      if (rowIndex < from || rowIndex >= to) {\n        this.free.push(keyValue);\n        this.keys.delete(rowIndex);\n      }\n    });\n\n    const size = to - from;\n    if (this.keys.size + this.free.length > size){\n      this.free.length = size - this.keys.size;\n    }\n\n    for (let rowIndex = from; rowIndex < to; rowIndex++) {\n      if (!this.keys.has(rowIndex)) {\n        const nextKeyValue = this.next();\n        this.keys.set(rowIndex, nextKeyValue);\n      }\n    }\n  }\n\n  keyFor(rowIndex) {\n    return this.keys.get(rowIndex)\n  }\n}\n","export function getFullRange({lo,hi}, bufferSize=0, rowCount=Number.MAX_SAFE_INTEGER){\n  if (bufferSize === 0){\n    return {from: lo, to: Math.min(hi, rowCount)};\n  } else if (lo === 0){\n    return {from: lo, to: Math.min(hi + bufferSize, rowCount)};\n  } else {\n    const rangeSize = hi - lo;\n    const buff = Math.round(bufferSize / 2);\n    const shortfallBefore = lo - buff < 0;\n    const shortFallAfter = rowCount - (hi + buff) < 0;\n\n    if (shortfallBefore && shortFallAfter){\n      return {from: 0, to: rowCount}\n    } else if (shortfallBefore){\n      return {from: 0, to: rangeSize + bufferSize}\n    } else if (shortFallAfter){\n      return {from: Math.max(0,rowCount - (rangeSize + bufferSize)), to: rowCount}\n    } else {\n      return {from: lo-buff, to: hi + buff}\n    }\n  }\n}\n\nexport function resetRange({lo,hi,bufferSize=0}){\n  return {\n      lo: 0,\n      hi: hi-lo,\n      bufferSize,\n      reset: true\n  };\n}\n\n\nexport class WindowRange {\n  constructor(from, to){\n    this.from = from;\n    this.to = to;\n  }\n\n  isWithin(index) {\n    return index >= this.from && index < this.to;\n  }\n\n  //find the overlap of this range and a new one\n  overlap(from, to){\n    return (from >= this.to || to < this.from)\n      ? [0, 0]\n      : [Math.max(from, this.from), Math.min(to, this.to)]\n  }\n\n  copy(){\n    return new WindowRange(this.from, this.to);\n  }\n}\n\n\n","export const bufferBreakout = (range, from, to, bufferSize) => {\n  const bufferPerimeter = bufferSize * 0.25;\n  if (!range || !bufferSize){\n    return true;\n  } else if (range.to - to < bufferPerimeter) {\n    return true;\n  } else if (range.from > 0 && from - range.from < bufferPerimeter) {\n    return true;\n  } else {\n    return false;\n  }\n}\n","import { WindowRange } from '@heswell/utils/src/range-utils';\nimport {bufferBreakout} from \"./buffer-range\";\nexport class ArrayBackedMovingWindow {\n  // Note, the buffer is already accounted for in the range passed in here\n  constructor({ lo, hi }, { from, to }, bufferSize) {\n    this.bufferSize = bufferSize;\n    this.clientRange = new WindowRange(lo, hi);\n    this.range = new WindowRange(from, to);\n    //internal data is always 0 based, we add range.from to determine an offset\n    this.internalData = new Array(bufferSize);\n    this.rowsWithinRange = 0;\n    this.rowCount = 0;\n  }\n\n  get hasAllRowsWithinRange() {\n    return (\n      this.rowsWithinRange === this.clientRange.to - this.clientRange.from ||\n      (this.rowCount > 0 && this.rowsWithinRange === this.rowCount)\n    );\n  }\n\n  setRowCount = (rowCount) => {\n    if (rowCount < this.internalData.length) {\n      this.internalData.length = rowCount;\n    }\n    if (rowCount < this.rowCount) {\n      // Brute force, works\n      this.rowsWithinRange = 0;\n      const end = Math.max(rowCount, this.clientRange.to);\n      for (let i = this.clientRange.from; i < end; i++) {\n        const rowIndex = i - this.range.from;\n        if (this.internalData[rowIndex] !== undefined) {\n          this.rowsWithinRange += 1;\n        }\n      }\n    }\n    this.rowCount = rowCount;\n  };\n\n  setAtIndex(index, data) {\n    //onsole.log(`ingest row at rowIndex ${index} [${index - this.range.from}]`)\n    const isWithinClientRange = this.isWithinClientRange(index);\n    if (isWithinClientRange || this.isWithinRange(index)) {\n      const internalIndex = index - this.range.from;\n      if (!this.internalData[internalIndex] && isWithinClientRange) {\n        this.rowsWithinRange += 1;\n        //onsole.log(`rowsWithinRange is now ${this.rowsWithinRange} out of ${this.range.to - this.range.from}`)\n      }\n      this.internalData[internalIndex] = data;\n    }\n    return isWithinClientRange;\n  }\n\n  getAtIndex(index) {\n    return this.range.isWithin(index) &&\n      this.internalData[index - this.range.from] != null\n      ? this.internalData[index - this.range.from]\n      : undefined;\n  }\n\n  isWithinRange(index) {\n    return this.range.isWithin(index);\n  }\n\n  isWithinClientRange(index) {\n    return this.clientRange.isWithin(index);\n  }\n\n  setClientRange(from, to) {\n    const originalRange = this.clientRange.copy();\n    this.clientRange.from = from;\n    this.clientRange.to = to;\n    this.rowsWithinRange = 0;\n    for (let i = from; i < to; i++) {\n      const internalIndex = i - this.range.from;\n      if (this.internalData[internalIndex]) {\n        this.rowsWithinRange += 1;\n      }\n    }\n\n    let clientRows = undefined;\n    let holdingRows = undefined;\n    const offset = this.range.from;\n\n    if (this.hasAllRowsWithinRange){\n      if (to > originalRange.to){\n        const start = Math.max(from, originalRange.to);\n        clientRows = this.internalData.slice(start-offset, to-offset);\n      } else {\n        const end = Math.min(originalRange.from, to);\n        clientRows = this.internalData.slice(from-offset, end-offset);\n      }\n    } else if (this.rowsWithinRange > 0){\n      if (to > originalRange.to){\n        const start = Math.max(from, originalRange.to);\n        holdingRows = this.internalData.slice(start-offset, to-offset).filter(row => !!row);\n      } else {\n        const end = Math.min(originalRange.from, to);\n        holdingRows = this.internalData.slice(Math.max(0,from-offset), end-offset).filter(row => !!row);\n      }\n    }\n\n    const serverDataRequired = bufferBreakout(this.range, from, to, this.bufferSize);\n    return [serverDataRequired, clientRows, holdingRows];\n  }\n\n  setRange(from, to) {\n    const [overlapFrom, overlapTo] = this.range.overlap(from, to);\n\n    const newData = new Array(to - from + this.bufferSize);\n    this.rowsWithinRange = 0;\n\n    for (let i = overlapFrom; i < overlapTo; i++) {\n      const data = this.getAtIndex(i);\n      if (data) {\n        const index = i - from;\n        newData[index] = data;\n        if (this.isWithinClientRange(i)) {\n          this.rowsWithinRange += 1;\n        }\n      }\n    }\n\n    this.internalData = newData;\n    this.range.from = from;\n    this.range.to = to;\n  }\n\n  getData() {\n    const { from, to } = this.range;\n    const { from: lo, to: hi } = this.clientRange;\n    const startOffset = Math.max(0, lo - from);\n    const endOffset = Math.min(to - from, to, hi - from, this.rowCount);\n    // const endOffset = Math.min(to-from, to, hi - from, this.rowCount);\n    //onsole.log(`MovingWindow getData (${lo}, ${hi}) range = ${from} ${to} , so start=${startOffset}, end=${endOffset}`)\n    return this.internalData.slice(startOffset, endOffset);\n  }\n}\n","import { metadataKeys } from '@heswell/utils/src/column-utils';\nimport { KeySet } from './keyset';\nimport * as Message from './messages';\nimport { ArrayBackedMovingWindow } from './array-backed-moving-window';\nimport { getFullRange } from '@heswell/utils/src/range-utils';\nimport { bufferBreakout } from \"./buffer-range\";\n\nconst { IDX, SELECTED } = metadataKeys;\nconst EMPTY_ARRAY = [];\n\nconst byRowIndex = ([index1],[index2]) => index1 - index2;\n\nexport class Viewport {\n  constructor({\n    viewport,\n    tablename,\n    columns,\n    range,\n    bufferSize = 0,\n    filter = '',\n    sort = [],\n    groupBy = [],\n    visualLink\n  }) {\n    this.clientViewportId = viewport;\n    this.table = tablename;\n    this.status = '';\n    this.suspended = false;\n    this.columns = columns;\n    this.clientRange = range;\n    this.bufferSize = bufferSize;\n    this.sort = {\n      sortDefs: sort,\n    };\n    this.groupBy = groupBy;\n    this.filterSpec = {\n      filter,\n    };\n    this.isTree = false;\n    this.dataWindow = undefined;\n    this.rowCountChanged = false;\n    this.keys = new KeySet(range);\n    this.links = null;\n    this.linkedParent = null;\n    this.pendingLinkedParent = visualLink;\n    this.pendingOperations = new Map();\n    this.pendingRangeRequest = null;\n    this.hasUpdates = false;\n    this.holdingPen = [];\n  }\n\n  get hasUpdatesToProcess() {\n    return this.rowCountChanged || this.hasUpdates;\n  }\n\n  subscribe() {\n    return {\n      type: Message.CREATE_VP,\n      table: this.table,\n      range: getFullRange(this.clientRange, this.bufferSize),\n      columns: this.columns,\n      sort: this.sort,\n      groupBy: this.groupBy,\n      filterSpec: this.filterSpec,\n    };\n  }\n\n  handleSubscribed({\n    viewPortId,\n    columns,\n    table,\n    range,\n    sort,\n    groupBy,\n    filterSpec,\n  }) {\n    this.serverViewportId = viewPortId;\n    this.status = 'subscribed';\n    this.columns = columns;\n    this.table = table;\n    this.range = range;\n    this.sort = sort;\n    this.groupBy = groupBy;\n    this.filterSpec = filterSpec;\n    this.isTree = groupBy && groupBy.length > 0;\n    this.dataWindow = new ArrayBackedMovingWindow(\n      this.clientRange,\n      range,\n      this.bufferSize,\n    );\n\n    console.log(\n      `%cViewport subscribed\n        clientVpId: ${this.clientViewportId}\n        serverVpId: ${this.serverViewportId}\n        table: ${this.table}\n        columns: ${columns.join(',')}\n        range: ${JSON.stringify(range)}\n        sort: ${JSON.stringify(sort)}\n        groupBy: ${JSON.stringify(groupBy)}\n        filterSpec: ${JSON.stringify(filterSpec)}\n        bufferSize: ${this.bufferSize}\n      `,\n      'color: blue',\n    );\n\n    return {\n      type: 'subscribed',\n      columns\n    }\n  }\n\n  awaitOperation(requestId, type) {\n    //TODO set uip a timeout mechanism here\n    this.pendingOperations.set(requestId, type);\n  }\n\n  // Return a message if we need to communicate this to client UI\n  completeOperation(requestId, ...params) {\n    const { clientViewportId, pendingOperations } = this;\n    const { type, data } = pendingOperations.get(requestId);\n    pendingOperations.delete(requestId);\n    if (type === Message.CHANGE_VP_RANGE) {\n      const [from, to] = params;\n      this.dataWindow.setRange(from, to);\n      //this.hasUpdates = true; // is this right ??????????\n      this.pendingRangeRequest = null;\n    } else if (type === 'groupBy') {\n      this.isTree = true;\n      this.groupBy = data;\n      return { clientViewportId, type, groupBy: data };\n    } else if (type === 'groupByClear') {\n      this.isTree = false;\n      this.groupBy = [];\n      return { clientViewportId, type: 'groupBy', groupBy: null };\n    } else if (type === 'filter') {\n      this.filterSpec = { filter: data };\n      return { clientViewportId, type, filter: data };\n    } else if (type === 'sort') {\n      this.sort = { sortDefs: data };\n      return { clientViewportId, type, sort: data };\n    } else if (type === 'selection') {\n      this.selection = data;\n    } else if (type === 'disable') {\n      this.suspended = true; // assuming its _SUCCESS, of cource\n    } else if (type === 'enable') {\n      this.suspended = false;\n    } else if (type === Message.CREATE_VISUAL_LINK){\n      const [colName, parentViewportId, parentColName] = params;\n      this.linkedParent = {\n        colName,\n        parentViewportId,\n        parentColName\n      };\n      this.pendingLinkedParent = null;\n      return {\n        type: 'visual-link-created',\n        clientViewportId,\n        colName,\n        parentViewportId,\n        parentColName\n      }\n    }\n  }\n\n  rangeRequest(requestId, from, to) {\n    // If we can satisfy the range request from the buffer, we will.\n    // May or may not need to make a server request, depending on status of buffer\n    const type = Message.CHANGE_VP_RANGE;\n    // If dataWindow has all data for the new range, it will return the\n    // delta of rows which are in the new range but were not in the\n    // previous range.\n    // Note: what if it doesn't have the entire range but DOES have all\n    // rows that constitute the delta ? Is this even possible ?\n    const [\n      serverDataRequired , clientRows, holdingRows\n    ] = this.dataWindow.setClientRange(from, to);\n    const serverRequest = serverDataRequired &&\n      bufferBreakout(this.pendingRangeRequest, from, to, this.bufferSize)\n      ? {\n          type,\n          viewPortId: this.serverViewportId,\n          ...getFullRange(\n            { lo: from, hi: to },\n            this.bufferSize,\n            this.dataWindow.rowCount,\n          ),\n        }\n      : undefined;\n    if (serverRequest) {\n      // TODO check that there os not already a pending server request for more data\n      this.awaitOperation(requestId, { type });\n      this.pendingRangeRequest = serverRequest;\n    }\n\n    // always reset the keys here, even if we're not going to return rows immediately.\n    this.keys.reset(this.dataWindow.clientRange);\n\n    if (this.holdingPen.some(([index]) => index < from || index >= to)){\n      this.holdingPen = this.holdingPen.filter(([index]) => index >= from && index < to);\n    }\n\n    const toClient = this.isTree ? toClientRowTree(this.groupBy, this.columns) : toClientRow;\n\n    if (holdingRows){\n      holdingRows.forEach(row => {\n        this.holdingPen.push(toClient(row, this.keys))\n      })\n    }\n\n    if (clientRows){\n      return [serverRequest, clientRows.map(row => toClient(row, this.keys))];\n    } else {\n      return [serverRequest]\n    }\n  }\n\n  setLinks(links){\n    this.links = links;\n    return [{\n      type: \"VP_VISUAL_LINKS_RESP\",\n      links,\n      clientViewportId: this.clientViewportId\n     }, this.pendingLinkedParent]\n  }\n\n  createLink(requestId, colName, parentVpId,  parentColumnName) {\n    const message = {\n      type: Message.CREATE_VISUAL_LINK,\n      parentVpId,\n      childVpId: this.serverViewportId,\n      parentColumnName,\n      childColumnName: colName,\n    }\n    this.awaitOperation(requestId, message);\n    return message;\n  }\n\n  enable(requestId) {\n    console.log(`Viewport enable ${this.serverViewportId}`)\n    this.awaitOperation(requestId, { type: 'enable' });\n    return {\n      type: Message.ENABLE_VP,\n      viewPortId: this.serverViewportId,\n    };\n  }\n\n  disable(requestId) {\n    console.log(`Viewport disable ${this.serverViewportId}`)\n    this.awaitOperation(requestId, { type: 'disable' });\n    return {\n      type: Message.DISABLE_VP,\n      viewPortId: this.serverViewportId,\n    };\n  }\n\n  filterRequest(requestId, filter) {\n    this.awaitOperation(requestId, { type: 'filter', data: filter });\n    return this.createRequest({ filterSpec: { filter } });\n  }\n\n  sortRequest(requestId, sortDefs) {\n    this.awaitOperation(requestId, { type: 'sort', data: sortDefs });\n    return this.createRequest({ sort: { sortDefs } });\n  }\n\n  groupByRequest(requestId, groupBy = EMPTY_ARRAY) {\n    const type = groupBy === EMPTY_ARRAY ? 'groupByClear' : 'groupBy';\n    this.awaitOperation(requestId, { type, data: groupBy });\n    return this.createRequest({ groupBy });\n  }\n\n  selectRequest(requestId, row, rangeSelect, keepExistingSelection) {\n    const singleSelect = !rangeSelect && !keepExistingSelection;\n    const selection = row[SELECTED]\n      ? singleSelect\n        ? []\n        : this.selection.filter((idx) => idx !== row[IDX])\n      : keepExistingSelection\n      ? this.selection.concat(row[IDX])\n      : [row[IDX]];\n\n    this.awaitOperation(requestId, { type: 'selection', data: selection });\n    return {\n      type: Message.SET_SELECTION,\n      vpId: this.serverViewportId,\n      selection,\n    };\n  }\n\n  handleUpdate(updateType, rowIndex, row) {\n    if (this.dataWindow.rowCount !== row.vpSize) {\n      this.dataWindow.setRowCount(row.vpSize);\n      this.rowCountChanged = true;\n    }\n    if (updateType === 'U') {\n      // Update will return true if row was within client range\n      if (this.dataWindow.setAtIndex(rowIndex, row)) {\n        this.hasUpdates = true;\n      }\n    }\n  }\n\n  getNewRowCount = () => {\n    if (this.rowCountChanged) {\n      this.rowCountChanged = false;\n      return this.dataWindow.rowCount;\n    }\n  };\n\n  // This is called only after new data has been received from server - data\n  // returned direcly from buffer does not use this.\n  // If we have updates, but we don't yet have data for the full client range\n  // in our buffer, store them in the holding pen. We know the remaining rows\n  // have been requested and will arrive imminently. Soon as we receive data,\n  // contents of holding pen plus additional rows received that fill the range\n  // will be dispatched to client.\n  // If we have any rows in the holding pen, and we now have a full set of\n  // client data, make sure we empty the pen and send those rows to client,\n  // along qith the new data.\n  // TODO what if we're going backwards\n  getClientRows(timeStamp) {\n    if (this.hasUpdates) {\n      const records = this.dataWindow.getData();\n      const { keys } = this;\n      const toClient = this.isTree ? toClientRowTree(this.groupBy, this.columns) : toClientRow;\n\n      const clientRows = this.dataWindow.hasAllRowsWithinRange\n        ? this.holdingPen.splice(0) : undefined;\n\n      const out = clientRows || this.holdingPen;\n\n      for (let row of records) {\n        if (row && row.ts >= timeStamp) {\n          out.push(toClient(row, keys));\n        }\n      }\n      this.hasUpdates = false;\n\n      // this only matters where we scroll backwards and have holdingPen data\n      // should we test for that explicitly ?\n      return clientRows && clientRows.sort(byRowIndex);\n    }\n  }\n\n  createRequest(params) {\n    return {\n      type: Message.CHANGE_VP,\n      viewPortId: this.serverViewportId,\n      columns: this.columns,\n      sort: this.sort,\n      groupBy: this.groupBy,\n      filterSpec: this.filterSpec,\n      ...params,\n    };\n  }\n}\n\nconst toClientRow = ({ rowIndex, rowKey, sel: isSelected, data }, keys) =>\n  [\n    rowIndex,\n    keys.keyFor(rowIndex),\n    true,\n    null,\n    null,\n    1,\n    rowKey,\n    isSelected,\n  ].concat(data);\n\nconst toClientRowTree = (groupBy, columns) => ({ rowIndex, rowKey, sel: isSelected, data }, keys) => {\n  let [depth, isExpanded, path, isLeaf, label, count, ...rest] = data;\n  const steps = rowKey.split('/').slice(1);\n\n  groupBy.forEach((col,i) => {\n    const idx = columns.indexOf(col);\n    rest[idx] = steps[i]\n  })\n\n  const record = [\n    rowIndex,\n    keys.keyFor(rowIndex),\n    isLeaf,\n    isExpanded,\n    depth,\n    count,\n    rowKey,\n    isSelected,\n  ].concat(rest);\n\n  return record;\n};\n","import * as Message from './messages';\nimport { Viewport } from './new-viewport';\n// TEST_DATA_COLLECTION\n// import { saveTestData } from '../../test-data-collection';\n\nlet _requestId = 1;\nexport const TEST_setRequestId = (id) => (_requestId = id);\n\nconst nextRequestId = () => `${_requestId++}`;\nconst EMPTY_ARRAY = [];\nexport class ServerProxy {\n  constructor(connection, callback) {\n    this.connection = connection;\n    this.postMessageToClient = callback;\n    this.viewports = new Map();\n    this.mapClientToServerViewport = new Map();\n    this.currentTimestamp = undefined;\n  }\n\n  async authenticate(username, password) {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer({ type: Message.AUTH, username, password }, '');\n      this.pendingAuthentication = { resolve, reject };\n    });\n  }\n\n  async login() {\n    return new Promise((resolve, reject) => {\n      this.sendMessageToServer(\n        { type: Message.LOGIN, token: this.loginToken, user: 'user' },\n        '',\n      );\n      this.pendingLogin = { resolve, reject };\n    });\n  }\n\n  subscribe(message) {\n    // Client sends a spurious subscribe message when a viewport is enabled\n    if (!this.mapClientToServerViewport.has(message.viewport)){\n      const viewport = new Viewport(message);\n      this.viewports.set(message.viewport, viewport);\n      // use client side viewport as request id, so that when we process the response,\n      // with the serverside viewport we can establish a mapping between the two\n      const isReady = this.sessionId !== '';\n      this.sendIfReady(viewport.subscribe(), message.viewport, isReady);\n    }\n\n  }\n\n  handleMessageFromClient(message) {\n    const { type, viewport: clientViewportId } = message;\n    const serverViewportId = this.mapClientToServerViewport.get(\n      clientViewportId,\n    );\n\n    // TEST DATA COLLECTION\n    // saveTestData(message, 'client');\n    //---------------------\n    const viewport = this.viewports.get(serverViewportId);\n    if (!viewport) {\n      switch (type) {\n        case Message.GET_TABLE_LIST:\n          this.sendMessageToServer({ type }, message.requestId);\n          break;\n        case Message.GET_TABLE_META:\n          this.sendMessageToServer(\n            { type, table: message.table },\n            message.requestId,\n          );\n          break;\n        default:\n      }\n      return;\n    }\n    const isReady = viewport.status === 'subscribed';\n\n    switch (message.type) {\n      case 'setViewRange':\n        const requestId = nextRequestId();\n        const [serverRequest, rows] = viewport.rangeRequest(\n          requestId,\n          message.range.lo,\n          message.range.hi,\n        );\n        if (serverRequest) {\n          this.sendIfReady(serverRequest, requestId, isReady);\n        }\n        if (rows) {\n          const clientMessage = {\n            type: 'viewport-updates',\n            viewports: {\n              [viewport.clientViewportId]: { rows },\n            },\n          };\n          this.postMessageToClient(clientMessage);\n        }\n        break;\n\n      case 'sort':\n        {\n          const requestId = nextRequestId();\n          const request = viewport.sortRequest(requestId, message.sortCriteria);\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'groupBy':\n        {\n          const requestId = nextRequestId();\n          const request = viewport.groupByRequest(requestId, message.groupBy);\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'filterQuery':\n        {\n          const requestId = nextRequestId();\n          const request = viewport.filterRequest(requestId, message.filter);\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'select':\n        {\n          const requestId = nextRequestId();\n          const { row, rangeSelect, keepExistingSelection } = message;\n          const request = viewport.selectRequest(\n            requestId,\n            row,\n            rangeSelect,\n            keepExistingSelection,\n          );\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'disable':\n        {\n          console.log(`%cDISABLE`,'color:red;font-weight: bold;')\n          const requestId = nextRequestId();\n          const request = viewport.disable(requestId);\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'enable':\n        {\n          const requestId = nextRequestId();\n          const request = viewport.enable(requestId);\n          this.sendIfReady(request, requestId, isReady);\n        }\n        break;\n\n      case 'openTreeNode':\n        this.sendIfReady(\n          {\n            type: Message.OPEN_TREE_NODE,\n            vpId: viewport.serverViewportId,\n            treeKey: message.key,\n          },\n          _requestId++,\n          isReady,\n        );\n        break;\n\n      case 'closeTreeNode':\n        this.sendIfReady(\n          {\n            type: Message.CLOSE_TREE_NODE,\n            vpId: viewport.serverViewportId,\n            treeKey: message.key,\n          },\n          _requestId++,\n          isReady,\n        );\n\n        break;\n\n      case 'createLink':\n        {\n          const {\n            parentVpId,\n            parentColumnName,\n            childColumnName,\n            viewport: clientViewportId\n          } = message;\n\n          const serverViewportId = this.mapClientToServerViewport.get(clientViewportId);\n          const viewport = this.viewports.get(serverViewportId)\n          const requestId = nextRequestId();\n          const request = viewport.createLink(\n            requestId,\n            childColumnName,\n            parentVpId,\n            parentColumnName\n          );\n\n          this.sendMessageToServer(request, requestId);\n\n        }\n        break;\n\n      default:\n        console.log(\n          `Vuu ServerProxy Unexpected message from client ${JSON.stringify(\n            message,\n          )}`,\n        );\n    }\n  }\n\n  sendIfReady(message, requestId, isReady = true) {\n    // TODO implement the message queuing in remote data view\n    if (isReady) {\n      this.sendMessageToServer(message, requestId);\n    } else {\n      // TODO need to make sure we keep the requestId\n      this.queuedRequests.push(message);\n    }\n    return isReady;\n  }\n\n  sendMessageToServer(body, requestId = _requestId++) {\n    // const { clientId } = this.connection;\n    this.connection.send({\n      requestId,\n      sessionId: this.sessionId,\n      token: this.loginToken,\n      user: 'user',\n      module: 'CORE',\n      body,\n    });\n  }\n\n  handleMessageFromServer(message) {\n    const {\n      requestId,\n      body: { type, timeStamp, ...body },\n    } = message;\n    const { viewports } = this;\n    switch (type) {\n      case Message.HB:\n        this.sendMessageToServer(\n          { type: Message.HB_RESP, ts: +new Date() },\n          'NA',\n        );\n        break;\n\n      case Message.AUTH_SUCCESS:\n        this.loginToken = message.token;\n        this.pendingAuthentication.resolve(message.token);\n        break;\n\n      case Message.LOGIN_SUCCESS:\n        this.sessionId = message.sessionId;\n        this.pendingLogin.resolve(message.sessionId);\n        break;\n\n      case Message.CREATE_VP_SUCCESS:\n        // The clientViewportId was used as requestId for CREATE_VPmessage\n        if (viewports.has(requestId)) {\n          const viewport = viewports.get(requestId);\n          const { viewPortId: serverViewportId } = body;\n          viewports.set(serverViewportId, viewport);\n          viewports.delete(requestId);\n          this.mapClientToServerViewport.set(requestId, serverViewportId);\n          const response = viewport.handleSubscribed(body);\n          if (response) {\n            this.postMessageToClient(response);\n          }\n          this.sendMessageToServer({\n            type: Message.GET_VP_VISUAL_LINKS,\n            vpId: serverViewportId\n          }, nextRequestId());\n\n\n        }\n        break;\n      case Message.SET_SELECTION_SUCCESS:\n        if (viewports.has(body.vpId)) {\n          viewports.get(body.vpId).completeOperation(requestId);\n        }\n        break;\n\n      case Message.CHANGE_VP_SUCCESS:\n      case Message.DISABLE_VP_SUCCESS:\n      case Message.ENABLE_VP_SUCCESS:\n        if (viewports.has(body.viewPortId)) {\n          const response = this.viewports\n            .get(body.viewPortId)\n            .completeOperation(requestId);\n          if (response) {\n            this.postMessageToClient(response);\n          }\n        }\n\n        break;\n\n      case Message.TABLE_ROW:\n        const [{ ts: firstBatchTimestamp } = { ts: timeStamp }] =\n          body.rows || EMPTY_ARRAY;\n        // console.log(`\\nbatch timestamp ${time(timeStamp)} first timestamp ${time(firstBatchTimestamp)} ${body.rows.length} rows in batch`)\n        for (const row of body.rows) {\n          const { viewPortId, rowIndex, rowKey, updateType } = row;\n          const viewport = viewports.get(viewPortId);\n          // console.log(`row timestamp ${time(row.ts)}`)\n          if (\n            viewport.isTree &&\n            updateType === 'U' &&\n            !rowKey.startsWith('$root')\n          ) {\n            // console.log('Ignore blank rows sent after GroupBy')\n          } else {\n            viewport.handleUpdate(updateType, rowIndex, row);\n          }\n        }\n        this.processUpdates(firstBatchTimestamp);\n        break;\n\n      case Message.CHANGE_VP_RANGE_SUCCESS:\n        {\n          const { viewPortId, from, to } = body;\n          viewports.get(viewPortId).completeOperation(requestId, from, to);\n        }\n        break;\n\n      case Message.OPEN_TREE_SUCCESS:\n      case Message.CLOSE_TREE_SUCCESS:\n\n        break;\n\n      case Message.CREATE_VISUAL_LINK_SUCCESS: {\n        const { childVpId, childColumnName, parentVpId, parentColumnName } = body;\n        const {clientViewportId: parentViewportId} = this.viewports.get(parentVpId);\n        const response = this.viewports.get(childVpId).completeOperation(\n          requestId,\n          childColumnName,\n          parentViewportId,\n          parentColumnName\n        );\n        if (response){\n          this.postMessageToClient(response)\n        }\n      }\n        break;\n\n      case Message.TABLE_LIST_RESP:\n        this.postMessageToClient({ type, tables: body.tables, requestId });\n        break;\n\n      case Message.TABLE_META_RESP:\n        this.postMessageToClient({\n          type,\n          table: body.table,\n          columns: body.columns,\n          requestId,\n        });\n        break;\n\n      case Message.VP_VISUAL_LINKS_RESP: {\n        const links = this.getActiveLinks(body.links);\n        if (links.length) {\n          const viewport = this.viewports.get(body.vpId);\n          const [clientMessage, pendingLink] = viewport.setLinks(links);\n          this.postMessageToClient(clientMessage);\n          if (pendingLink){\n            console.log({pendingLink});\n            const {colName, parentViewportId, parentColName} = pendingLink;\n            const requestId = nextRequestId();\n            const serverViewportId = this.mapClientToServerViewport.get(parentViewportId);\n            const message = viewport.createLink(requestId, colName, serverViewportId, parentColName);\n            this.sendMessageToServer(message, requestId);\n          }\n        }\n      }\n        break;\n\n      case \"ERROR\":\n        console.error(body.msg)\n        break;\n\n      default:\n        console.log(`handleMessageFromServer,${body.type}.`);\n    }\n  }\n\n  // Eliminate links to suspended viewports\n  getActiveLinks(links) {\n    return links.filter(link => {\n      const viewport = this.viewports.get(link.parentVpId);\n      return viewport && !viewport.suspended;\n    })\n  }\n\n\n  processUpdates(timeStamp) {\n    let clientMessage;\n    this.viewports.forEach((viewport) => {\n      if (viewport.hasUpdatesToProcess) {\n        const rows = viewport.getClientRows(timeStamp);\n        const size = viewport.getNewRowCount();\n        if (size !== undefined || rows) {\n          clientMessage = clientMessage || {\n            type: 'viewport-updates',\n            viewports: {},\n          };\n          clientMessage.viewports[viewport.clientViewportId] = { rows, size };\n        }\n      }\n      if (clientMessage) {\n        // const now = performance.now();\n        // if (updateTime){\n        //   onsole.log(`time between updates ${now - updateTime}`)\n        // }\n        // updateTime = now;\n        this.postMessageToClient(clientMessage);\n      }\n    });\n  }\n}\n\nconst time = (ts) => {\n  const date = new Date(ts);\n  return `${date.getHours()}:${date.getMinutes()}:${date.getSeconds()} ${date.getMilliseconds()}`;\n};\n","import connect from '@vuu-ui/data-remote/src/remote-websocket-connection';\n// TEST DATA COLLECTION\nimport { getTestMessages } from '@vuu-ui/data-remote/src/test-data-collection';\nimport { ServerProxy } from '@vuu-ui/data-remote/src/servers/vuu/new-server-proxy';\nimport { createLogger, logColor } from '@heswell/utils/src/logging';\n\nconst logger = createLogger('Worker', logColor.brown);\n\nlet server;\n\nasync function connectToServer(url) {\n  const connection = await connect(\n    url,\n    // if this was called during connect, we would get a ReferenceError, but it will\n    // never be called until subscriptions have been made, so this is safe.\n    (msg) => server.handleMessageFromServer(msg),\n    (msg) => logger.log(JSON.stringify(msg)),\n    // msg => {\n    //   onConnectionStatusMessage(msg);\n    //   if (msg.status === 'disconnected'){\n    //     server.disconnected();\n    //   } else if (msg.status === 'reconnected'){\n    //     server.resubscribeAll();\n    //   }\n    // }\n  );\n  server = new ServerProxy(connection, (msg) => sendMessageToClient(msg));\n  // TODO handle authentication, login\n  if (typeof server.authenticate === 'function') {\n    await server.authenticate('steve', 'pword');\n  }\n  if (typeof server.login === 'function') {\n    await server.login();\n  }\n}\n\nlet lastTime = 0;\nconst timings = [];\n\nfunction sendMessageToClient(message){\n  const now = Math.round(performance.now());\n  if (lastTime){\n    timings.push(now-lastTime)\n\n    // if (timings.length % 100 === 0){\n    //   console.log(timings.join(', : '))\n    //   timings.length = 0;\n    // }\n  }\n  postMessage(message);\n  lastTime= now;\n}\n\nconst handleMessageFromClient = async ({ data: message }) => {\n  switch (message.type) {\n    case 'connect':\n      await connectToServer(message.url);\n      postMessage({ type: 'connected' });\n      break;\n    case 'subscribe':\n      server.subscribe(message);\n      break;\n    case 'unsubscribe':\n      server.unsubscribe(message.viewport);\n      break;\n    // TEST DATA COLLECTION\n    case 'send-websocket-data':\n      postMessage({ type: 'websocket-data', data: getTestMessages() });\n      break;\n    default:\n      server.handleMessageFromClient(message);\n  }\n};\n\n/* eslint-disable-next-line no-restricted-globals */\nself.addEventListener('message', handleMessageFromClient);\n\npostMessage({ type: 'ready' });\n"],"names":["logger","EMPTY_ARRAY","Message.CREATE_VP","Message.CHANGE_VP_RANGE","Message.CREATE_VISUAL_LINK","Message.ENABLE_VP","Message.DISABLE_VP","Message.SET_SELECTION","Message.CHANGE_VP","Message.AUTH","Message.LOGIN","Message.GET_TABLE_LIST","Message.GET_TABLE_META","Message.OPEN_TREE_NODE","Message.CLOSE_TREE_NODE","Message.HB","Message.HB_RESP","Message.AUTH_SUCCESS","Message.LOGIN_SUCCESS","Message.CREATE_VP_SUCCESS","Message.GET_VP_VISUAL_LINKS","Message.SET_SELECTION_SUCCESS","Message.CHANGE_VP_SUCCESS","Message.DISABLE_VP_SUCCESS","Message.ENABLE_VP_SUCCESS","Message.TABLE_ROW","Message.CHANGE_VP_RANGE_SUCCESS","Message.OPEN_TREE_SUCCESS","Message.CLOSE_TREE_SUCCESS","Message.CREATE_VISUAL_LINK_SUCCESS","Message.TABLE_LIST_RESP","Message.TABLE_META_RESP","Message.VP_VISUAL_LINKS_RESP"],"mappings":"AAAO,MAAM,QAAQ,GAAG;AACxB,EAAE,KAAK,GAAG,mCAAmC;AAC7C,EAAE,IAAI,GAAG,gCAAgC;AACzC,EAAE,KAAK,GAAG,iCAAiC;AAC3C,EAAE,KAAK,GAAG,iCAAiC;AAC3C,EAAC;AACD;AACA,MAAM,CAAC,KAAK,CAAC,GAAG,QAAQ,CAAC;AAClB,MAAM,YAAY,GAAG,CAAC,MAAM,EAAE,UAAU,CAAC,KAAK,EAAE,QAAQ,CAAC,KAAK,MAAM;AAC3E,EAAE,GAAG,EAAE,CAAC,GAAG,EAAE,IAAI,CAAC,EAAE,KAAK,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,EAAE,CAAC,IAAI,EAAE,MAAM,CAAC,IAAI,EAAE,GAAG,CAAC,CAAC,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,CAAC;AACxG,EAAE,IAAI,EAAE,CAAC,GAAG,KAAK,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAC;AACnD,CAAC;;ACTD;AACA;AACA;AACA,MAAMA,QAAM,GAAG,YAAY,CAAC,qBAAqB,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnE;AACA,MAAM,kBAAkB,GAAG,EAAE,CAAC;AAC9B;AACA,MAAM,YAAY,GAAG,MAAM,CAAC,cAAc,CAAC,CAAC;AAC5C,MAAM,kBAAkB,GAAG,MAAM,CAAC,oBAAoB,CAAC,CAAC;AACxD;AACe,eAAe,OAAO;AACrC,EAAE,gBAAgB;AAClB,EAAE,QAAQ;AACV,EAAE,wBAAwB;AAC1B,EAAE;AACF,EAAE,OAAO,cAAc,CAAC,gBAAgB,EAAE,CAAC,GAAG,KAAK;AACnD,IAAI,MAAM,EAAE,IAAI,EAAE,GAAG,GAAG,CAAC;AACzB,IAAI,IAAI,IAAI,KAAK,mBAAmB,EAAE;AACtC,MAAM,wBAAwB,CAAC,GAAG,CAAC,CAAC;AACpC,KAAK,MAAM,IAAI,IAAI,KAAK,IAAI,EAAE;AAC9B,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,oCAAoC,CAAC,CAAC,CAAC;AAC1D,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AACnC;AACA,MAAMA,QAAM,CAAC,GAAG,CAAC,CAAC,8BAA8B,EAAE,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAClE,KAAK,MAAM;AACX,MAAM,QAAQ,CAAC,GAAG,CAAC,CAAC;AACpB,KAAK;AACL,GAAG,CAAC,CAAC;AACL,CAAC;AACD;AACA,eAAe,SAAS,CAAC,UAAU,EAAE;AACrC,EAAE,OAAO,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;AAC3D,EAAE,cAAc,CAAC,UAAU,CAAC,GAAG,EAAE,UAAU,CAAC,kBAAkB,CAAC,EAAE,UAAU,CAAC,CAAC;AAC7E,CAAC;AACD;AACA,eAAe,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE;AACzD,EAAE,MAAM,gBAAgB;AACxB,IAAI,kBAAkB,CAAC,GAAG,CAAC;AAC3B,KAAK,kBAAkB,CAAC,GAAG,CAAC,GAAG;AAC/B,MAAM,iBAAiB,EAAE,CAAC;AAC1B,MAAM,MAAM,EAAE,eAAe;AAC7B,KAAK,CAAC,CAAC;AACP;AACA,EAAE,IAAI;AACN,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,YAAY,EAAE,CAAC,CAAC;AAClE,IAAI,MAAM,YAAY,GAAG,OAAO,UAAU,KAAK,WAAW,CAAC;AAC3D,IAAI,MAAM,EAAE,GAAG,MAAM,eAAe,CAAC,GAAG,CAAC,CAAC;AAC1C;AACA,IAAI,OAAO,CAAC,GAAG;AACf,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AACpB,MAAM,iDAAiD;AACvD,MAAM,+BAA+B;AACrC,KAAK,CAAC;AACN;AACA,IAAI,IAAI,YAAY,EAAE;AACtB,MAAM,UAAU,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;AACnC,KAAK,MAAM;AACX,MAAM,UAAU,GAAG,IAAI,UAAU,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,CAAC,CAAC;AACrD,KAAK;AACL;AACA,IAAI,MAAM,MAAM,GAAG,YAAY,GAAG,aAAa,GAAG,WAAW,CAAC;AAC9D;AACA,IAAI,QAAQ,CAAC,EAAE,IAAI,EAAE,mBAAmB,EAAE,MAAM,EAAE,CAAC,CAAC;AACpD;AACA,IAAI,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;AAC/B;AACA,IAAI,OAAO,UAAU,CAAC;AACtB,GAAG,CAAC,OAAO,GAAG,EAAE;AAChB,IAAI,MAAM,KAAK,GAAG,EAAE,gBAAgB,CAAC,iBAAiB,GAAG,CAAC,CAAC;AAC3D,IAAI,QAAQ,CAAC;AACb,MAAM,IAAI,EAAE,mBAAmB;AAC/B,MAAM,MAAM,EAAE,eAAe;AAC7B,MAAM,MAAM,EAAE,mBAAmB;AACjC,MAAM,KAAK;AACX,KAAK,CAAC,CAAC;AACP,IAAI,IAAI,KAAK,EAAE;AACf,MAAM,OAAO,gBAAgB,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK,CAAC,CAAC;AAChE,KAAK;AACL,GAAG;AACH,CAAC;AACD;AACA,MAAM,gBAAgB,GAAG,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,EAAE,KAAK;AAC1D,EAAE,IAAI,OAAO,CAAC,CAAC,OAAO,KAAK;AAC3B,IAAI,UAAU,CAAC,MAAM;AACrB,MAAM,OAAO,CAAC,cAAc,CAAC,GAAG,EAAE,QAAQ,EAAE,UAAU,CAAC,CAAC,CAAC;AACzD,KAAK,EAAE,KAAK,CAAC,CAAC;AACd,GAAG,CAAC,CAAC;AACL;AACA,MAAM,eAAe,GAAG,CAAC,gBAAgB;AACzC,EAAE,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AACnC;AACA,IAAI,MAAM,EAAE,GAAG,IAAI,SAAS,CAAC,OAAO,GAAG,gBAAgB,CAAC,CAAC;AACzD,IAAI,EAAE,CAAC,MAAM,GAAG,MAAM,OAAO,CAAC,EAAE,CAAC,CAAC;AAClC,IAAI,EAAE,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,CAAC;AACtC,GAAG,CAAC,CAAC;AACL;AACA,MAAM,UAAU,CAAC;AACjB,EAAE,WAAW,CAAC,EAAE,EAAE,GAAG,EAAE,QAAQ,EAAE;AACjC,IAAI,IAAI,CAAC,GAAG,GAAG,GAAG,CAAC;AACnB,IAAI,IAAI,CAAC,kBAAkB,CAAC,GAAG,QAAQ,CAAC;AACxC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,EAAE,CAAC,CAAC;AAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC;AAC1B,GAAG;AACH;AACA,EAAE,SAAS,GAAG;AACd,IAAI,SAAS,CAAC,IAAI,CAAC,CAAC;AACpB,GAAG;AACH;AACA,EAAE,CAAC,YAAY,CAAC,CAAC,EAAE,EAAE;AACrB,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;AAC9C;AACA,IAAI,EAAE,CAAC,SAAS,GAAG,CAAC,GAAG,KAAK;AAC5B;AACA;AACA,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;AAC3C;AACA,MAAM,QAAQ,CAAC,OAAO,CAAC,CAAC;AACxB,KAAK,CAAC;AACN;AACA,IAAI,EAAE,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK;AAC1B,MAAM,OAAO,CAAC,GAAG;AACjB,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,QAAQ,+CAA+C;AACvD,QAAQ,6BAA6B;AACrC,OAAO,CAAC;AACR,MAAM,QAAQ,CAAC;AACf,QAAQ,IAAI,EAAE,mBAAmB;AACjC,QAAQ,MAAM,EAAE,cAAc;AAC9B,QAAQ,MAAM,EAAE,OAAO;AACvB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;AACpC,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO;AACP,KAAK,CAAC;AACN;AACA,IAAI,EAAE,CAAC,OAAO,GAAG,CAAC,GAAG,KAAK;AAC1B,MAAM,OAAO,CAAC,GAAG;AACjB,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC;AAC3B,QAAQ,kDAAkD;AAC1D,QAAQ,gCAAgC;AACxC,OAAO,CAAC;AACR,MAAM,QAAQ,CAAC;AACf,QAAQ,IAAI,EAAE,mBAAmB;AACjC,QAAQ,MAAM,EAAE,cAAc;AAC9B,QAAQ,MAAM,EAAE,OAAO;AACvB,OAAO,CAAC,CAAC;AACT,MAAM,IAAI,IAAI,CAAC,MAAM,KAAK,QAAQ,EAAE;AACpC,QAAQ,SAAS,CAAC,IAAI,CAAC,CAAC;AACxB,QAAQ,IAAI,CAAC,IAAI,GAAG,KAAK,CAAC;AAC1B,OAAO;AACP,KAAK,CAAC;AACN;AACA,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK;AAC1B;AACA,MAAM,EAAE,CAAC,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;AACnC,KAAK,CAAC;AACN;AACA,IAAI,MAAM,IAAI,GAAG,CAAC,GAAG,KAAK;AAC1B,MAAMA,QAAM,CAAC,GAAG,CAAC,CAAC,uCAAuC,EAAE,GAAG,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvE,KAAK,CAAC;AACN;AACA,IAAI,MAAM,KAAK,GAAG,CAAC,GAAG,KAAK;AAC3B,MAAM,OAAO,CAAC,GAAG;AACjB,QAAQ,CAAC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,4BAA4B,CAAC;AAC5E,OAAO,CAAC;AACR,KAAK,CAAC;AACN;AACA,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB;AACA,IAAI,IAAI,CAAC,KAAK,GAAG,MAAM;AACvB,MAAM,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAC;AAClD,MAAM,IAAI,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC7B,MAAM,EAAE,CAAC,KAAK,EAAE,CAAC;AACjB,MAAM,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACvB,KAAK,CAAC;AACN,GAAG;AACH;;ACnLA,MAAM,IAAI,GAAG,EAAE,CAAC;AA2BhB;AACO,MAAM,eAAe,GAAG,MAAM;AACrC,EAAE,MAAM,QAAQ,GAAG,IAAI,CAAC,KAAK,EAAE,CAAC;AAChC,EAAE,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC;AAClB,EAAE,OAAO,QAAQ,CAAC;AAClB,CAAC;;AChCM,MAAM,IAAI,GAAG,MAAM,CAAC;AACpB,MAAM,YAAY,GAAG,cAAc,CAAC;AACpC,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAC9C,MAAM,eAAe,GAAG,iBAAiB,CAAC;AAC1C,MAAM,uBAAuB,GAAG,yBAAyB,CAAC;AAC1D,MAAM,eAAe,GAAG,iBAAiB,CAAC;AAC1C,MAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAEhD,MAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAChD,MAAM,0BAA0B,GAAG,4BAA4B,CAAC;AAChE,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAC9C,MAAM,UAAU,GAAG,YAAY,CAAC;AAChC,MAAM,kBAAkB,GAAG,oBAAoB,CAAC;AAEhD,MAAM,SAAS,GAAG,WAAW,CAAC;AAC9B,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAE9C,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,MAAM,mBAAmB,GAAG,qBAAqB,CAAC;AAClD,MAAM,EAAE,GAAG,IAAI,CAAC;AAChB,MAAM,OAAO,GAAG,SAAS,CAAC;AAC1B,MAAM,KAAK,GAAG,OAAO,CAAC;AACtB,MAAM,aAAa,GAAG,eAAe,CAAC;AACtC,MAAM,cAAc,GAAG,gBAAgB,CAAC;AACxC,MAAM,iBAAiB,GAAG,mBAAmB,CAAC;AAE9C,MAAM,aAAa,GAAG,eAAe,CAAC;AACtC,MAAM,qBAAqB,GAAG,uBAAuB,CAAC;AACtD,MAAM,eAAe,GAAG,iBAAiB,CAAC;AAC1C,MAAM,eAAe,GAAG,iBAAiB,CAAC;AAC1C,MAAM,oBAAoB,GAAG,sBAAsB,CAAC;AAC3D;AACO,MAAM,SAAS,GAAG,WAAW;;ACuG7B,MAAM,YAAY,GAAG;AAC5B,IAAI,GAAG,EAAE,CAAC;AACV,IAAI,UAAU,EAAE,CAAC;AACjB,IAAI,OAAO,EAAE,CAAC;AACd,IAAI,WAAW,EAAE,CAAC;AAClB,IAAI,KAAK,EAAE,CAAC;AACZ,IAAI,KAAK,EAAE,CAAC;AACZ,IAAI,GAAG,EAAE,CAAC;AACV,IAAI,QAAQ,EAAE,CAAC;AACf;AACA;AACA;AACA;AACA,IAAI,KAAK,EAAE,CAAC;AACZ;;ACvJO,MAAM,MAAM,CAAC;AACpB,EAAE,WAAW,CAAC,KAAK,EAAE;AACrB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,GAAG,EAAE,CAAC;AAC1B,IAAI,IAAI,CAAC,IAAI,GAAG,EAAE,CAAC;AACnB,IAAI,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AAC1B,IAAI,IAAI,KAAK,CAAC;AACd,MAAM,MAAM,CAAC,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,EAAE,EAAE,EAAE,CAAC,EAAE,CAAC,GAAG,KAAK,CAAC;AAC7C,MAAM,IAAI,CAAC,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC,CAAC;AAC7B,KAAK;AACL,GAAG;AACH;AACA,EAAE,IAAI,GAAG;AACT,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,EAAE;AAC1B,MAAM,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;AAC7B,KAAK,MAAM;AACX,MAAM,OAAO,IAAI,CAAC,YAAY,EAAE,CAAC;AACjC,KAAK;AACL,GAAG;AACH;AACA,EAAE,KAAK,CAAC,CAAC,IAAI,EAAE,EAAE,CAAC,EAAE;AACpB,IAAI,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,QAAQ,EAAE,QAAQ,KAAK;AAC9C,MAAM,IAAI,QAAQ,GAAG,IAAI,IAAI,QAAQ,IAAI,EAAE,EAAE;AAC7C,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACjC,QAAQ,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;AACnC,OAAO;AACP,KAAK,CAAC,CAAC;AACP;AACA,IAAI,MAAM,IAAI,GAAG,EAAE,GAAG,IAAI,CAAC;AAC3B,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACjD,MAAM,IAAI,CAAC,IAAI,CAAC,MAAM,GAAG,IAAI,GAAG,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC;AAC/C,KAAK;AACL;AACA,IAAI,KAAK,IAAI,QAAQ,GAAG,IAAI,EAAE,QAAQ,GAAG,EAAE,EAAE,QAAQ,EAAE,EAAE;AACzD,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,EAAE;AACpC,QAAQ,MAAM,YAAY,GAAG,IAAI,CAAC,IAAI,EAAE,CAAC;AACzC,QAAQ,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,YAAY,CAAC,CAAC;AAC9C,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,MAAM,CAAC,QAAQ,EAAE;AACnB,IAAI,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC;AAClC,GAAG;AACH;;AC5CO,SAAS,YAAY,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,QAAQ,CAAC,MAAM,CAAC,gBAAgB,CAAC;AACrF,EAAE,IAAI,UAAU,KAAK,CAAC,CAAC;AACvB,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,QAAQ,CAAC,CAAC,CAAC;AAClD,GAAG,MAAM,IAAI,EAAE,KAAK,CAAC,CAAC;AACtB,IAAI,OAAO,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAC;AAC/D,GAAG,MAAM;AACT,IAAI,MAAM,SAAS,GAAG,EAAE,GAAG,EAAE,CAAC;AAC9B,IAAI,MAAM,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,CAAC,CAAC,CAAC;AAC5C,IAAI,MAAM,eAAe,GAAG,EAAE,GAAG,IAAI,GAAG,CAAC,CAAC;AAC1C,IAAI,MAAM,cAAc,GAAG,QAAQ,IAAI,EAAE,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC;AACtD;AACA,IAAI,IAAI,eAAe,IAAI,cAAc,CAAC;AAC1C,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC;AACpC,KAAK,MAAM,IAAI,eAAe,CAAC;AAC/B,MAAM,OAAO,CAAC,IAAI,EAAE,CAAC,EAAE,EAAE,EAAE,SAAS,GAAG,UAAU,CAAC;AAClD,KAAK,MAAM,IAAI,cAAc,CAAC;AAC9B,MAAM,OAAO,CAAC,IAAI,EAAE,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,IAAI,SAAS,GAAG,UAAU,CAAC,CAAC,EAAE,EAAE,EAAE,QAAQ,CAAC;AAClF,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AAC3C,KAAK;AACL,GAAG;AACH,CAAC;AAUD;AACA;AACO,MAAM,WAAW,CAAC;AACzB,EAAE,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC;AACvB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;AACjB,GAAG;AACH;AACA,EAAE,QAAQ,CAAC,KAAK,EAAE;AAClB,IAAI,OAAO,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,KAAK,GAAG,IAAI,CAAC,EAAE,CAAC;AACjD,GAAG;AACH;AACA;AACA,EAAE,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC;AACnB,IAAI,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC,IAAI;AAC7C,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC;AACd,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,IAAI,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,EAAE,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC1D,GAAG;AACH;AACA,EAAE,IAAI,EAAE;AACR,IAAI,OAAO,IAAI,WAAW,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC,EAAE,CAAC,CAAC;AAC/C,GAAG;AACH;;ACrDO,MAAM,cAAc,GAAG,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,KAAK;AAC/D,EAAE,MAAM,eAAe,GAAG,UAAU,GAAG,IAAI,CAAC;AAC5C,EAAE,IAAI,CAAC,KAAK,IAAI,CAAC,UAAU,CAAC;AAC5B,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,MAAM,IAAI,KAAK,CAAC,EAAE,GAAG,EAAE,GAAG,eAAe,EAAE;AAC9C,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,MAAM,IAAI,KAAK,CAAC,IAAI,GAAG,CAAC,IAAI,IAAI,GAAG,KAAK,CAAC,IAAI,GAAG,eAAe,EAAE;AACpE,IAAI,OAAO,IAAI,CAAC;AAChB,GAAG,MAAM;AACT,IAAI,OAAO,KAAK,CAAC;AACjB,GAAG;AACH;;ACTO,MAAM,uBAAuB,CAAC;AACrC;AACA,EAAE,WAAW,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,UAAU,EAAE;AACpD,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,WAAW,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/C,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,WAAW,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAC3C;AACA,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,KAAK,CAAC,UAAU,CAAC,CAAC;AAC9C,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC7B,IAAI,IAAI,CAAC,QAAQ,GAAG,CAAC,CAAC;AACtB,GAAG;AACH;AACA,EAAE,IAAI,qBAAqB,GAAG;AAC9B,IAAI;AACJ,MAAM,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI;AAC1E,OAAO,IAAI,CAAC,QAAQ,GAAG,CAAC,IAAI,IAAI,CAAC,eAAe,KAAK,IAAI,CAAC,QAAQ,CAAC;AACnE,MAAM;AACN,GAAG;AACH;AACA,EAAE,WAAW,GAAG,CAAC,QAAQ,KAAK;AAC9B,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE;AAC7C,MAAM,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,QAAQ,CAAC;AAC1C,KAAK;AACL,IAAI,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,EAAE;AAClC;AACA,MAAM,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC/B,MAAM,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,EAAE,CAAC,CAAC;AAC1D,MAAM,KAAK,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE;AACxD,QAAQ,MAAM,QAAQ,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAC7C,QAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,KAAK,SAAS,EAAE;AACvD,UAAU,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;AACpC,SAAS;AACT,OAAO;AACP,KAAK;AACL,IAAI,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC7B,GAAG;AACH;AACA,EAAE,UAAU,CAAC,KAAK,EAAE,IAAI,EAAE;AAC1B;AACA,IAAI,MAAM,mBAAmB,GAAG,IAAI,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC;AAChE,IAAI,IAAI,mBAAmB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE;AAC1D,MAAM,MAAM,aAAa,GAAG,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACpD,MAAM,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,IAAI,mBAAmB,EAAE;AACpE,QAAQ,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;AAClC;AACA,OAAO;AACP,MAAM,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,GAAG,IAAI,CAAC;AAC9C,KAAK;AACL,IAAI,OAAO,mBAAmB,CAAC;AAC/B,GAAG;AACH;AACA,EAAE,UAAU,CAAC,KAAK,EAAE;AACpB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC;AACrC,MAAM,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,IAAI,IAAI;AACxD,QAAQ,IAAI,CAAC,YAAY,CAAC,KAAK,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAClD,QAAQ,SAAS,CAAC;AAClB,GAAG;AACH;AACA,EAAE,aAAa,CAAC,KAAK,EAAE;AACvB,IAAI,OAAO,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtC,GAAG;AACH;AACA,EAAE,mBAAmB,CAAC,KAAK,EAAE;AAC7B,IAAI,OAAO,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC5C,GAAG;AACH;AACA,EAAE,cAAc,CAAC,IAAI,EAAE,EAAE,EAAE;AAC3B,IAAI,MAAM,aAAa,GAAG,IAAI,CAAC,WAAW,CAAC,IAAI,EAAE,CAAC;AAClD,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,GAAG,IAAI,CAAC;AACjC,IAAI,IAAI,CAAC,WAAW,CAAC,EAAE,GAAG,EAAE,CAAC;AAC7B,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC7B,IAAI,KAAK,IAAI,CAAC,GAAG,IAAI,EAAE,CAAC,GAAG,EAAE,EAAE,CAAC,EAAE,EAAE;AACpC,MAAM,MAAM,aAAa,GAAG,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AAChD,MAAM,IAAI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,EAAE;AAC5C,QAAQ,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;AAClC,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,UAAU,GAAG,SAAS,CAAC;AAC/B,IAAI,IAAI,WAAW,GAAG,SAAS,CAAC;AAChC,IAAI,MAAM,MAAM,GAAG,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC;AACnC;AACA,IAAI,IAAI,IAAI,CAAC,qBAAqB,CAAC;AACnC,MAAM,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC;AAChC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC;AACvD,QAAQ,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC;AACtE,OAAO,MAAM;AACb,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACrD,QAAQ,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC;AACtE,OAAO;AACP,KAAK,MAAM,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AACxC,MAAM,IAAI,EAAE,GAAG,aAAa,CAAC,EAAE,CAAC;AAChC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,IAAI,EAAE,aAAa,CAAC,EAAE,CAAC,CAAC;AACvD,QAAQ,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,KAAK,CAAC,MAAM,EAAE,EAAE,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AAC5F,OAAO,MAAM;AACb,QAAQ,MAAM,GAAG,GAAG,IAAI,CAAC,GAAG,CAAC,aAAa,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACrD,QAAQ,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,GAAG,CAAC,MAAM,CAAC,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC;AACxG,OAAO;AACP,KAAK;AACL;AACA,IAAI,MAAM,kBAAkB,GAAG,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC;AACrF,IAAI,OAAO,CAAC,kBAAkB,EAAE,UAAU,EAAE,WAAW,CAAC,CAAC;AACzD,GAAG;AACH;AACA,EAAE,QAAQ,CAAC,IAAI,EAAE,EAAE,EAAE;AACrB,IAAI,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,GAAG,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAClE;AACA,IAAI,MAAM,OAAO,GAAG,IAAI,KAAK,CAAC,EAAE,GAAG,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,IAAI,IAAI,CAAC,eAAe,GAAG,CAAC,CAAC;AAC7B;AACA,IAAI,KAAK,IAAI,CAAC,GAAG,WAAW,EAAE,CAAC,GAAG,SAAS,EAAE,CAAC,EAAE,EAAE;AAClD,MAAM,MAAM,IAAI,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC;AACtC,MAAM,IAAI,IAAI,EAAE;AAChB,QAAQ,MAAM,KAAK,GAAG,CAAC,GAAG,IAAI,CAAC;AAC/B,QAAQ,OAAO,CAAC,KAAK,CAAC,GAAG,IAAI,CAAC;AAC9B,QAAQ,IAAI,IAAI,CAAC,mBAAmB,CAAC,CAAC,CAAC,EAAE;AACzC,UAAU,IAAI,CAAC,eAAe,IAAI,CAAC,CAAC;AACpC,SAAS;AACT,OAAO;AACP,KAAK;AACL;AACA,IAAI,IAAI,CAAC,YAAY,GAAG,OAAO,CAAC;AAChC,IAAI,IAAI,CAAC,KAAK,CAAC,IAAI,GAAG,IAAI,CAAC;AAC3B,IAAI,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;AACvB,GAAG;AACH;AACA,EAAE,OAAO,GAAG;AACZ,IAAI,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC;AACpC,IAAI,MAAM,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC;AAClD,IAAI,MAAM,WAAW,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,EAAE,EAAE,GAAG,IAAI,CAAC,CAAC;AAC/C,IAAI,MAAM,SAAS,GAAG,IAAI,CAAC,GAAG,CAAC,EAAE,GAAG,IAAI,EAAE,EAAE,EAAE,EAAE,GAAG,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AACxE;AACA;AACA,IAAI,OAAO,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;AAC3D,GAAG;AACH;;AClIA,MAAM,EAAE,GAAG,EAAE,QAAQ,EAAE,GAAG,YAAY,CAAC;AACvC,MAAMC,aAAW,GAAG,EAAE,CAAC;AACvB;AACA,MAAM,UAAU,GAAG,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,MAAM,GAAG,MAAM,CAAC;AAC1D;AACO,MAAM,QAAQ,CAAC;AACtB,EAAE,WAAW,CAAC;AACd,IAAI,QAAQ;AACZ,IAAI,SAAS;AACb,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,UAAU,GAAG,CAAC;AAClB,IAAI,MAAM,GAAG,EAAE;AACf,IAAI,IAAI,GAAG,EAAE;AACb,IAAI,OAAO,GAAG,EAAE;AAChB,IAAI,UAAU;AACd,GAAG,EAAE;AACL,IAAI,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;AACrC,IAAI,IAAI,CAAC,KAAK,GAAG,SAAS,CAAC;AAC3B,IAAI,IAAI,CAAC,MAAM,GAAG,EAAE,CAAC;AACrB,IAAI,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC3B,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAC7B,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,IAAI,GAAG;AAChB,MAAM,QAAQ,EAAE,IAAI;AACpB,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,UAAU,GAAG;AACtB,MAAM,MAAM;AACZ,KAAK,CAAC;AACN,IAAI,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AACxB,IAAI,IAAI,CAAC,UAAU,GAAG,SAAS,CAAC;AAChC,IAAI,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACjC,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,MAAM,CAAC,KAAK,CAAC,CAAC;AAClC,IAAI,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACtB,IAAI,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC;AAC7B,IAAI,IAAI,CAAC,mBAAmB,GAAG,UAAU,CAAC;AAC1C,IAAI,IAAI,CAAC,iBAAiB,GAAG,IAAI,GAAG,EAAE,CAAC;AACvC,IAAI,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACpC,IAAI,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC5B,IAAI,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACzB,GAAG;AACH;AACA,EAAE,IAAI,mBAAmB,GAAG;AAC5B,IAAI,OAAO,IAAI,CAAC,eAAe,IAAI,IAAI,CAAC,UAAU,CAAC;AACnD,GAAG;AACH;AACA,EAAE,SAAS,GAAG;AACd,IAAI,OAAO;AACX,MAAM,IAAI,EAAEC,SAAiB;AAC7B,MAAM,KAAK,EAAE,IAAI,CAAC,KAAK;AACvB,MAAM,KAAK,EAAE,YAAY,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,UAAU,CAAC;AAC5D,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO;AAC3B,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO;AAC3B,MAAM,UAAU,EAAE,IAAI,CAAC,UAAU;AACjC,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,gBAAgB,CAAC;AACnB,IAAI,UAAU;AACd,IAAI,OAAO;AACX,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,IAAI;AACR,IAAI,OAAO;AACX,IAAI,UAAU;AACd,GAAG,EAAE;AACL,IAAI,IAAI,CAAC,gBAAgB,GAAG,UAAU,CAAC;AACvC,IAAI,IAAI,CAAC,MAAM,GAAG,YAAY,CAAC;AAC/B,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC;AACrB,IAAI,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;AAC3B,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,MAAM,GAAG,OAAO,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;AAChD,IAAI,IAAI,CAAC,UAAU,GAAG,IAAI,uBAAuB;AACjD,MAAM,IAAI,CAAC,WAAW;AACtB,MAAM,KAAK;AACX,MAAM,IAAI,CAAC,UAAU;AACrB,KAAK,CAAC;AACN;AACA,IAAI,OAAO,CAAC,GAAG;AACf,MAAM,CAAC;AACP,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC;AAC5C,oBAAoB,EAAE,IAAI,CAAC,gBAAgB,CAAC;AAC5C,eAAe,EAAE,IAAI,CAAC,KAAK,CAAC;AAC5B,iBAAiB,EAAE,OAAO,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACrC,eAAe,EAAE,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;AACvC,cAAc,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;AACrC,iBAAiB,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAC3C,oBAAoB,EAAE,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC;AACjD,oBAAoB,EAAE,IAAI,CAAC,UAAU,CAAC;AACtC,MAAM,CAAC;AACP,MAAM,aAAa;AACnB,KAAK,CAAC;AACN;AACA,IAAI,OAAO;AACX,MAAM,IAAI,EAAE,YAAY;AACxB,MAAM,OAAO;AACb,KAAK;AACL,GAAG;AACH;AACA,EAAE,cAAc,CAAC,SAAS,EAAE,IAAI,EAAE;AAClC;AACA,IAAI,IAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,SAAS,EAAE,IAAI,CAAC,CAAC;AAChD,GAAG;AACH;AACA;AACA,EAAE,iBAAiB,CAAC,SAAS,EAAE,GAAG,MAAM,EAAE;AAC1C,IAAI,MAAM,EAAE,gBAAgB,EAAE,iBAAiB,EAAE,GAAG,IAAI,CAAC;AACzD,IAAI,MAAM,EAAE,IAAI,EAAE,IAAI,EAAE,GAAG,iBAAiB,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AAC5D,IAAI,iBAAiB,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACxC,IAAI,IAAI,IAAI,KAAKC,eAAuB,EAAE;AAC1C,MAAM,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,GAAG,MAAM,CAAC;AAChC,MAAM,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACzC;AACA,MAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACtC,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AACnC,MAAM,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC;AACzB,MAAM,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AAC1B,MAAM,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AACvD,KAAK,MAAM,IAAI,IAAI,KAAK,cAAc,EAAE;AACxC,MAAM,IAAI,CAAC,MAAM,GAAG,KAAK,CAAC;AAC1B,MAAM,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;AACxB,MAAM,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,CAAC;AAClE,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAClC,MAAM,IAAI,CAAC,UAAU,GAAG,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AACzC,MAAM,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,CAAC;AACtD,KAAK,MAAM,IAAI,IAAI,KAAK,MAAM,EAAE;AAChC,MAAM,IAAI,CAAC,IAAI,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC;AACrC,MAAM,OAAO,EAAE,gBAAgB,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AACpD,KAAK,MAAM,IAAI,IAAI,KAAK,WAAW,EAAE;AACrC,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC5B,KAAK,MAAM,IAAI,IAAI,KAAK,SAAS,EAAE;AACnC,MAAM,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC;AAC5B,KAAK,MAAM,IAAI,IAAI,KAAK,QAAQ,EAAE;AAClC,MAAM,IAAI,CAAC,SAAS,GAAG,KAAK,CAAC;AAC7B,KAAK,MAAM,IAAI,IAAI,KAAKC,kBAA0B,CAAC;AACnD,MAAM,MAAM,CAAC,OAAO,EAAE,gBAAgB,EAAE,aAAa,CAAC,GAAG,MAAM,CAAC;AAChE,MAAM,IAAI,CAAC,YAAY,GAAG;AAC1B,QAAQ,OAAO;AACf,QAAQ,gBAAgB;AACxB,QAAQ,aAAa;AACrB,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC;AACtC,MAAM,OAAO;AACb,QAAQ,IAAI,EAAE,qBAAqB;AACnC,QAAQ,gBAAgB;AACxB,QAAQ,OAAO;AACf,QAAQ,gBAAgB;AACxB,QAAQ,aAAa;AACrB,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,YAAY,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,EAAE;AACpC;AACA;AACA,IAAI,MAAM,IAAI,GAAGD,eAAuB,CAAC;AACzC;AACA;AACA;AACA;AACA;AACA,IAAI,MAAM;AACV,MAAM,kBAAkB,GAAG,UAAU,EAAE,WAAW;AAClD,KAAK,GAAG,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AACjD,IAAI,MAAM,aAAa,GAAG,kBAAkB;AAC5C,MAAM,cAAc,CAAC,IAAI,CAAC,mBAAmB,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,CAAC,UAAU,CAAC;AACzE,QAAQ;AACR,UAAU,IAAI;AACd,UAAU,UAAU,EAAE,IAAI,CAAC,gBAAgB;AAC3C,UAAU,GAAG,YAAY;AACzB,YAAY,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,EAAE,EAAE;AAChC,YAAY,IAAI,CAAC,UAAU;AAC3B,YAAY,IAAI,CAAC,UAAU,CAAC,QAAQ;AACpC,WAAW;AACX,SAAS;AACT,QAAQ,SAAS,CAAC;AAClB,IAAI,IAAI,aAAa,EAAE;AACvB;AACA,MAAM,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,CAAC,CAAC;AAC/C,MAAM,IAAI,CAAC,mBAAmB,GAAG,aAAa,CAAC;AAC/C,KAAK;AACL;AACA;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;AACjD;AACA,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,GAAG,IAAI,IAAI,KAAK,IAAI,EAAE,CAAC,CAAC;AACvE,MAAM,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,KAAK,IAAI,IAAI,IAAI,KAAK,GAAG,EAAE,CAAC,CAAC;AACzF,KAAK;AACL;AACA,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;AAC7F;AACA,IAAI,IAAI,WAAW,CAAC;AACpB,MAAM,WAAW,CAAC,OAAO,CAAC,GAAG,IAAI;AACjC,QAAQ,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,EAAC;AACtD,OAAO,EAAC;AACR,KAAK;AACL;AACA,IAAI,IAAI,UAAU,CAAC;AACnB,MAAM,OAAO,CAAC,aAAa,EAAE,UAAU,CAAC,GAAG,CAAC,GAAG,IAAI,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC9E,KAAK,MAAM;AACX,MAAM,OAAO,CAAC,aAAa,CAAC;AAC5B,KAAK;AACL,GAAG;AACH;AACA,EAAE,QAAQ,CAAC,KAAK,CAAC;AACjB,IAAI,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC;AACvB,IAAI,OAAO,CAAC;AACZ,MAAM,IAAI,EAAE,sBAAsB;AAClC,MAAM,KAAK;AACX,MAAM,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AAC7C,MAAM,EAAE,IAAI,CAAC,mBAAmB,CAAC;AACjC,GAAG;AACH;AACA,EAAE,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,UAAU,GAAG,gBAAgB,EAAE;AAChE,IAAI,MAAM,OAAO,GAAG;AACpB,MAAM,IAAI,EAAEC,kBAA0B;AACtC,MAAM,UAAU;AAChB,MAAM,SAAS,EAAE,IAAI,CAAC,gBAAgB;AACtC,MAAM,gBAAgB;AACtB,MAAM,eAAe,EAAE,OAAO;AAC9B,MAAK;AACL,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAC5C,IAAI,OAAO,OAAO,CAAC;AACnB,GAAG;AACH;AACA,EAAE,MAAM,CAAC,SAAS,EAAE;AACpB,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,gBAAgB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAC;AAC3D,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACvD,IAAI,OAAO;AACX,MAAM,IAAI,EAAEC,SAAiB;AAC7B,MAAM,UAAU,EAAE,IAAI,CAAC,gBAAgB;AACvC,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,OAAO,CAAC,SAAS,EAAE;AACrB,IAAI,OAAO,CAAC,GAAG,CAAC,CAAC,iBAAiB,EAAE,IAAI,CAAC,gBAAgB,CAAC,CAAC,EAAC;AAC5D,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;AACxD,IAAI,OAAO;AACX,MAAM,IAAI,EAAEC,UAAkB;AAC9B,MAAM,UAAU,EAAE,IAAI,CAAC,gBAAgB;AACvC,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,aAAa,CAAC,SAAS,EAAE,MAAM,EAAE;AACnC,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,CAAC,CAAC;AACrE,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,UAAU,EAAE,EAAE,MAAM,EAAE,EAAE,CAAC,CAAC;AAC1D,GAAG;AACH;AACA,EAAE,WAAW,CAAC,SAAS,EAAE,QAAQ,EAAE;AACnC,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,CAAC,CAAC;AACrE,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,IAAI,EAAE,EAAE,QAAQ,EAAE,EAAE,CAAC,CAAC;AACtD,GAAG;AACH;AACA,EAAE,cAAc,CAAC,SAAS,EAAE,OAAO,GAAGL,aAAW,EAAE;AACnD,IAAI,MAAM,IAAI,GAAG,OAAO,KAAKA,aAAW,GAAG,cAAc,GAAG,SAAS,CAAC;AACtE,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC,CAAC;AAC5D,IAAI,OAAO,IAAI,CAAC,aAAa,CAAC,EAAE,OAAO,EAAE,CAAC,CAAC;AAC3C,GAAG;AACH;AACA,EAAE,aAAa,CAAC,SAAS,EAAE,GAAG,EAAE,WAAW,EAAE,qBAAqB,EAAE;AACpE,IAAI,MAAM,YAAY,GAAG,CAAC,WAAW,IAAI,CAAC,qBAAqB,CAAC;AAChE,IAAI,MAAM,SAAS,GAAG,GAAG,CAAC,QAAQ,CAAC;AACnC,QAAQ,YAAY;AACpB,UAAU,EAAE;AACZ,UAAU,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,GAAG,KAAK,GAAG,KAAK,GAAG,CAAC,GAAG,CAAC,CAAC;AAC1D,QAAQ,qBAAqB;AAC7B,QAAQ,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;AACvC,QAAQ,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;AACnB;AACA,IAAI,IAAI,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,WAAW,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;AAC3E,IAAI,OAAO;AACX,MAAM,IAAI,EAAEM,aAAqB;AACjC,MAAM,IAAI,EAAE,IAAI,CAAC,gBAAgB;AACjC,MAAM,SAAS;AACf,KAAK,CAAC;AACN,GAAG;AACH;AACA,EAAE,YAAY,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,EAAE;AAC1C,IAAI,IAAI,IAAI,CAAC,UAAU,CAAC,QAAQ,KAAK,GAAG,CAAC,MAAM,EAAE;AACjD,MAAM,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC;AAC9C,MAAM,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;AAClC,KAAK;AACL,IAAI,IAAI,UAAU,KAAK,GAAG,EAAE;AAC5B;AACA,MAAM,IAAI,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,EAAE,GAAG,CAAC,EAAE;AACrD,QAAQ,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAC/B,OAAO;AACP,KAAK;AACL,GAAG;AACH;AACA,EAAE,cAAc,GAAG,MAAM;AACzB,IAAI,IAAI,IAAI,CAAC,eAAe,EAAE;AAC9B,MAAM,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;AACnC,MAAM,OAAO,IAAI,CAAC,UAAU,CAAC,QAAQ,CAAC;AACtC,KAAK;AACL,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,EAAE,aAAa,CAAC,SAAS,EAAE;AAC3B,IAAI,IAAI,IAAI,CAAC,UAAU,EAAE;AACzB,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,CAAC;AAChD,MAAM,MAAM,EAAE,IAAI,EAAE,GAAG,IAAI,CAAC;AAC5B,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,MAAM,GAAG,eAAe,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,GAAG,WAAW,CAAC;AAC/F;AACA,MAAM,MAAM,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC,qBAAqB;AAC9D,UAAU,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,GAAG,SAAS,CAAC;AAChD;AACA,MAAM,MAAM,GAAG,GAAG,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC;AAChD;AACA,MAAM,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;AAC/B,QAAQ,IAAI,GAAG,IAAI,GAAG,CAAC,EAAE,IAAI,SAAS,EAAE;AACxC,UAAU,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,CAAC;AACxC,SAAS;AACT,OAAO;AACP,MAAM,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC9B;AACA;AACA;AACA,MAAM,OAAO,UAAU,IAAI,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACvD,KAAK;AACL,GAAG;AACH;AACA,EAAE,aAAa,CAAC,MAAM,EAAE;AACxB,IAAI,OAAO;AACX,MAAM,IAAI,EAAEC,SAAiB;AAC7B,MAAM,UAAU,EAAE,IAAI,CAAC,gBAAgB;AACvC,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO;AAC3B,MAAM,IAAI,EAAE,IAAI,CAAC,IAAI;AACrB,MAAM,OAAO,EAAE,IAAI,CAAC,OAAO;AAC3B,MAAM,UAAU,EAAE,IAAI,CAAC,UAAU;AACjC,MAAM,GAAG,MAAM;AACf,KAAK,CAAC;AACN,GAAG;AACH,CAAC;AACD;AACA,MAAM,WAAW,GAAG,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,IAAI;AACtE,EAAE;AACF,IAAI,QAAQ;AACZ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACzB,IAAI,IAAI;AACR,IAAI,IAAI;AACR,IAAI,IAAI;AACR,IAAI,CAAC;AACL,IAAI,MAAM;AACV,IAAI,UAAU;AACd,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjB;AACA,MAAM,eAAe,GAAG,CAAC,OAAO,EAAE,OAAO,KAAK,CAAC,EAAE,QAAQ,EAAE,MAAM,EAAE,GAAG,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,IAAI,KAAK;AACrG,EAAE,IAAI,CAAC,KAAK,EAAE,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE,KAAK,EAAE,KAAK,EAAE,GAAG,IAAI,CAAC,GAAG,IAAI,CAAC;AACtE,EAAE,MAAM,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AAC3C;AACA,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,CAAC,KAAK;AAC7B,IAAI,MAAM,GAAG,GAAG,OAAO,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACrC,IAAI,IAAI,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC,CAAC,EAAC;AACxB,GAAG,EAAC;AACJ;AACA,EAAE,MAAM,MAAM,GAAG;AACjB,IAAI,QAAQ;AACZ,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC;AACzB,IAAI,MAAM;AACV,IAAI,UAAU;AACd,IAAI,KAAK;AACT,IAAI,KAAK;AACT,IAAI,MAAM;AACV,IAAI,UAAU;AACd,GAAG,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;AACjB;AACA,EAAE,OAAO,MAAM,CAAC;AAChB,CAAC;;ACrYD;AACA;AACA;AACA,IAAI,UAAU,GAAG,CAAC,CAAC;AAEnB;AACA,MAAM,aAAa,GAAG,MAAM,CAAC,EAAE,UAAU,EAAE,CAAC,CAAC,CAAC;AAC9C,MAAM,WAAW,GAAG,EAAE,CAAC;AAChB,MAAM,WAAW,CAAC;AACzB,EAAE,WAAW,CAAC,UAAU,EAAE,QAAQ,EAAE;AACpC,IAAI,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,IAAI,IAAI,CAAC,mBAAmB,GAAG,QAAQ,CAAC;AACxC,IAAI,IAAI,CAAC,SAAS,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/B,IAAI,IAAI,CAAC,yBAAyB,GAAG,IAAI,GAAG,EAAE,CAAC;AAC/C,IAAI,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AACtC,GAAG;AACH;AACA,EAAE,MAAM,YAAY,CAAC,QAAQ,EAAE,QAAQ,EAAE;AACzC,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,MAAM,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAEC,IAAY,EAAE,QAAQ,EAAE,QAAQ,EAAE,EAAE,EAAE,CAAC,CAAC;AAC/E,MAAM,IAAI,CAAC,qBAAqB,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;AACvD,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,MAAM,KAAK,GAAG;AAChB,IAAI,OAAO,IAAI,OAAO,CAAC,CAAC,OAAO,EAAE,MAAM,KAAK;AAC5C,MAAM,IAAI,CAAC,mBAAmB;AAC9B,QAAQ,EAAE,IAAI,EAAEC,KAAa,EAAE,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,MAAM,EAAE;AACrE,QAAQ,EAAE;AACV,OAAO,CAAC;AACR,MAAM,IAAI,CAAC,YAAY,GAAG,EAAE,OAAO,EAAE,MAAM,EAAE,CAAC;AAC9C,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,SAAS,CAAC,OAAO,EAAE;AACrB;AACA,IAAI,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC9D,MAAM,MAAM,QAAQ,GAAG,IAAI,QAAQ,CAAC,OAAO,CAAC,CAAC;AAC7C,MAAM,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;AACrD;AACA;AACA,MAAM,MAAM,OAAO,GAAG,IAAI,CAAC,SAAS,KAAK,EAAE,CAAC;AAC5C,MAAM,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,SAAS,EAAE,EAAE,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;AACxE,KAAK;AACL;AACA,GAAG;AACH;AACA,EAAE,uBAAuB,CAAC,OAAO,EAAE;AACnC,IAAI,MAAM,EAAE,IAAI,EAAE,QAAQ,EAAE,gBAAgB,EAAE,GAAG,OAAO,CAAC;AACzD,IAAI,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG;AAC/D,MAAM,gBAAgB;AACtB,KAAK,CAAC;AACN;AACA;AACA;AACA;AACA,IAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC1D,IAAI,IAAI,CAAC,QAAQ,EAAE;AACnB,MAAM,QAAQ,IAAI;AAClB,QAAQ,KAAKC,cAAsB;AACnC,UAAU,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAE,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;AAChE,UAAU,MAAM;AAChB,QAAQ,KAAKC,cAAsB;AACnC,UAAU,IAAI,CAAC,mBAAmB;AAClC,YAAY,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,CAAC,KAAK,EAAE;AAC1C,YAAY,OAAO,CAAC,SAAS;AAC7B,WAAW,CAAC;AACZ,UAAU,MAAM;AAEhB,OAAO;AACP,MAAM,OAAO;AACb,KAAK;AACL,IAAI,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,KAAK,YAAY,CAAC;AACrD;AACA,IAAI,QAAQ,OAAO,CAAC,IAAI;AACxB,MAAM,KAAK,cAAc;AACzB,QAAQ,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC1C,QAAQ,MAAM,CAAC,aAAa,EAAE,IAAI,CAAC,GAAG,QAAQ,CAAC,YAAY;AAC3D,UAAU,SAAS;AACnB,UAAU,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1B,UAAU,OAAO,CAAC,KAAK,CAAC,EAAE;AAC1B,SAAS,CAAC;AACV,QAAQ,IAAI,aAAa,EAAE;AAC3B,UAAU,IAAI,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AAC9D,SAAS;AACT,QAAQ,IAAI,IAAI,EAAE;AAClB,UAAU,MAAM,aAAa,GAAG;AAChC,YAAY,IAAI,EAAE,kBAAkB;AACpC,YAAY,SAAS,EAAE;AACvB,cAAc,CAAC,QAAQ,CAAC,gBAAgB,GAAG,EAAE,IAAI,EAAE;AACnD,aAAa;AACb,WAAW,CAAC;AACZ,UAAU,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;AAClD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,MAAM;AACjB,QAAQ;AACR,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,WAAW,CAAC,SAAS,EAAE,OAAO,CAAC,YAAY,CAAC,CAAC;AAChF,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,SAAS;AACpB,QAAQ;AACR,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,cAAc,CAAC,SAAS,EAAE,OAAO,CAAC,OAAO,CAAC,CAAC;AAC9E,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,aAAa;AACxB,QAAQ;AACR,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,EAAE,OAAO,CAAC,MAAM,CAAC,CAAC;AAC5E,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,QAAQ;AACnB,QAAQ;AACR,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,EAAE,GAAG,EAAE,WAAW,EAAE,qBAAqB,EAAE,GAAG,OAAO,CAAC;AACtE,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa;AAChD,YAAY,SAAS;AACrB,YAAY,GAAG;AACf,YAAY,WAAW;AACvB,YAAY,qBAAqB;AACjC,WAAW,CAAC;AACZ,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,SAAS;AACpB,QAAQ;AACR,UAAU,OAAO,CAAC,GAAG,CAAC,CAAC,SAAS,CAAC,CAAC,8BAA8B,EAAC;AACjE,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACtD,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,QAAQ;AACnB,QAAQ;AACR,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACrD,UAAU,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,CAAC,CAAC;AACxD,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,cAAc;AACzB,QAAQ,IAAI,CAAC,WAAW;AACxB,UAAU;AACV,YAAY,IAAI,EAAEC,cAAsB;AACxC,YAAY,IAAI,EAAE,QAAQ,CAAC,gBAAgB;AAC3C,YAAY,OAAO,EAAE,OAAO,CAAC,GAAG;AAChC,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,UAAU,OAAO;AACjB,SAAS,CAAC;AACV,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,eAAe;AAC1B,QAAQ,IAAI,CAAC,WAAW;AACxB,UAAU;AACV,YAAY,IAAI,EAAEC,eAAuB;AACzC,YAAY,IAAI,EAAE,QAAQ,CAAC,gBAAgB;AAC3C,YAAY,OAAO,EAAE,OAAO,CAAC,GAAG;AAChC,WAAW;AACX,UAAU,UAAU,EAAE;AACtB,UAAU,OAAO;AACjB,SAAS,CAAC;AACV;AACA,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,YAAY;AACvB,QAAQ;AACR,UAAU,MAAM;AAChB,YAAY,UAAU;AACtB,YAAY,gBAAgB;AAC5B,YAAY,eAAe;AAC3B,YAAY,QAAQ,EAAE,gBAAgB;AACtC,WAAW,GAAG,OAAO,CAAC;AACtB;AACA,UAAU,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACxF,UAAU,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAC;AAC/D,UAAU,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC5C,UAAU,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU;AAC7C,YAAY,SAAS;AACrB,YAAY,eAAe;AAC3B,YAAY,UAAU;AACtB,YAAY,gBAAgB;AAC5B,WAAW,CAAC;AACZ;AACA,UAAU,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACvD;AACA,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM;AACN,QAAQ,OAAO,CAAC,GAAG;AACnB,UAAU,CAAC,+CAA+C,EAAE,IAAI,CAAC,SAAS;AAC1E,YAAY,OAAO;AACnB,WAAW,CAAC,CAAC;AACb,SAAS,CAAC;AACV,KAAK;AACL,GAAG;AACH;AACA,EAAE,WAAW,CAAC,OAAO,EAAE,SAAS,EAAE,OAAO,GAAG,IAAI,EAAE;AAClD;AACA,IAAI,IAAI,OAAO,EAAE;AACjB,MAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACnD,KAAK,MAAM;AACX;AACA,MAAM,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACxC,KAAK;AACL,IAAI,OAAO,OAAO,CAAC;AACnB,GAAG;AACH;AACA,EAAE,mBAAmB,CAAC,IAAI,EAAE,SAAS,GAAG,UAAU,EAAE,EAAE;AACtD;AACA,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC;AACzB,MAAM,SAAS;AACf,MAAM,SAAS,EAAE,IAAI,CAAC,SAAS;AAC/B,MAAM,KAAK,EAAE,IAAI,CAAC,UAAU;AAC5B,MAAM,IAAI,EAAE,MAAM;AAClB,MAAM,MAAM,EAAE,MAAM;AACpB,MAAM,IAAI;AACV,KAAK,CAAC,CAAC;AACP,GAAG;AACH;AACA,EAAE,uBAAuB,CAAC,OAAO,EAAE;AACnC,IAAI,MAAM;AACV,MAAM,SAAS;AACf,MAAM,IAAI,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,GAAG,IAAI,EAAE;AACxC,KAAK,GAAG,OAAO,CAAC;AAChB,IAAI,MAAM,EAAE,SAAS,EAAE,GAAG,IAAI,CAAC;AAC/B,IAAI,QAAQ,IAAI;AAChB,MAAM,KAAKC,EAAU;AACrB,QAAQ,IAAI,CAAC,mBAAmB;AAChC,UAAU,EAAE,IAAI,EAAEC,OAAe,EAAE,EAAE,EAAE,CAAC,IAAI,IAAI,EAAE,EAAE;AACpD,UAAU,IAAI;AACd,SAAS,CAAC;AACV,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,YAAoB;AAC/B,QAAQ,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC,KAAK,CAAC;AACxC,QAAQ,IAAI,CAAC,qBAAqB,CAAC,OAAO,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC1D,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,aAAqB;AAChC,QAAQ,IAAI,CAAC,SAAS,GAAG,OAAO,CAAC,SAAS,CAAC;AAC3C,QAAQ,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,OAAO,CAAC,SAAS,CAAC,CAAC;AACrD,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,iBAAyB;AACpC;AACA,QAAQ,IAAI,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,EAAE;AACtC,UAAU,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACpD,UAAU,MAAM,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;AACxD,UAAU,SAAS,CAAC,GAAG,CAAC,gBAAgB,EAAE,QAAQ,CAAC,CAAC;AACpD,UAAU,SAAS,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC;AACtC,UAAU,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,SAAS,EAAE,gBAAgB,CAAC,CAAC;AAC1E,UAAU,MAAM,QAAQ,GAAG,QAAQ,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC;AAC3D,UAAU,IAAI,QAAQ,EAAE;AACxB,YAAY,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AAC/C,WAAW;AACX,UAAU,IAAI,CAAC,mBAAmB,CAAC;AACnC,YAAY,IAAI,EAAEC,mBAA2B;AAC7C,YAAY,IAAI,EAAE,gBAAgB;AAClC,WAAW,EAAE,aAAa,EAAE,CAAC,CAAC;AAC9B;AACA;AACA,SAAS;AACT,QAAQ,MAAM;AACd,MAAM,KAAKC,qBAA6B;AACxC,QAAQ,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,EAAE;AACtC,UAAU,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,iBAAiB,CAAC,SAAS,CAAC,CAAC;AAChE,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,iBAAyB,CAAC;AACrC,MAAM,KAAKC,kBAA0B,CAAC;AACtC,MAAM,KAAKC,iBAAyB;AACpC,QAAQ,IAAI,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,EAAE;AAC5C,UAAU,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS;AACzC,aAAa,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC;AACjC,aAAa,iBAAiB,CAAC,SAAS,CAAC,CAAC;AAC1C,UAAU,IAAI,QAAQ,EAAE;AACxB,YAAY,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,CAAC;AAC/C,WAAW;AACX,SAAS;AACT;AACA,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,SAAiB;AAC5B,QAAQ,MAAM,CAAC,EAAE,EAAE,EAAE,mBAAmB,EAAE,GAAG,EAAE,EAAE,EAAE,SAAS,EAAE,CAAC;AAC/D,UAAU,IAAI,CAAC,IAAI,IAAI,WAAW,CAAC;AACnC;AACA,QAAQ,KAAK,MAAM,GAAG,IAAI,IAAI,CAAC,IAAI,EAAE;AACrC,UAAU,MAAM,EAAE,UAAU,EAAE,QAAQ,EAAE,MAAM,EAAE,UAAU,EAAE,GAAG,GAAG,CAAC;AACnE,UAAU,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACrD;AACA,UAAU;AACV,YAAY,QAAQ,CAAC,MAAM;AAC3B,YAAY,UAAU,KAAK,GAAG;AAC9B,YAAY,CAAC,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC;AACvC,YAAY,CAED,MAAM;AACjB,YAAY,QAAQ,CAAC,YAAY,CAAC,UAAU,EAAE,QAAQ,EAAE,GAAG,CAAC,CAAC;AAC7D,WAAW;AACX,SAAS;AACT,QAAQ,IAAI,CAAC,cAAc,CAAC,mBAAmB,CAAC,CAAC;AACjD,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,uBAA+B;AAC1C,QAAQ;AACR,UAAU,MAAM,EAAE,UAAU,EAAE,IAAI,EAAE,EAAE,EAAE,GAAG,IAAI,CAAC;AAChD,UAAU,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,iBAAiB,CAAC,SAAS,EAAE,IAAI,EAAE,EAAE,CAAC,CAAC;AAC3E,SAAS;AACT,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,iBAAyB,CAAC;AACrC,MAAM,KAAKC,kBAA0B;AACrC;AACA,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,0BAAkC,EAAE;AAC/C,QAAQ,MAAM,EAAE,SAAS,EAAE,eAAe,EAAE,UAAU,EAAE,gBAAgB,EAAE,GAAG,IAAI,CAAC;AAClF,QAAQ,MAAM,CAAC,gBAAgB,EAAE,gBAAgB,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACpF,QAAQ,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,iBAAiB;AACxE,UAAU,SAAS;AACnB,UAAU,eAAe;AACzB,UAAU,gBAAgB;AAC1B,UAAU,gBAAgB;AAC1B,SAAS,CAAC;AACV,QAAQ,IAAI,QAAQ,CAAC;AACrB,UAAU,IAAI,CAAC,mBAAmB,CAAC,QAAQ,EAAC;AAC5C,SAAS;AACT,OAAO;AACP,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,eAAuB;AAClC,QAAQ,IAAI,CAAC,mBAAmB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,IAAI,CAAC,MAAM,EAAE,SAAS,EAAE,CAAC,CAAC;AAC3E,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,eAAuB;AAClC,QAAQ,IAAI,CAAC,mBAAmB,CAAC;AACjC,UAAU,IAAI;AACd,UAAU,KAAK,EAAE,IAAI,CAAC,KAAK;AAC3B,UAAU,OAAO,EAAE,IAAI,CAAC,OAAO;AAC/B,UAAU,SAAS;AACnB,SAAS,CAAC,CAAC;AACX,QAAQ,MAAM;AACd;AACA,MAAM,KAAKC,oBAA4B,EAAE;AACzC,QAAQ,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACtD,QAAQ,IAAI,KAAK,CAAC,MAAM,EAAE;AAC1B,UAAU,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;AACzD,UAAU,MAAM,CAAC,aAAa,EAAE,WAAW,CAAC,GAAG,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACxE,UAAU,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;AAClD,UAAU,IAAI,WAAW,CAAC;AAC1B,YAAY,OAAO,CAAC,GAAG,CAAC,CAAC,WAAW,CAAC,CAAC,CAAC;AACvC,YAAY,MAAM,CAAC,OAAO,EAAE,gBAAgB,EAAE,aAAa,CAAC,GAAG,WAAW,CAAC;AAC3E,YAAY,MAAM,SAAS,GAAG,aAAa,EAAE,CAAC;AAC9C,YAAY,MAAM,gBAAgB,GAAG,IAAI,CAAC,yBAAyB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AAC1F,YAAY,MAAM,OAAO,GAAG,QAAQ,CAAC,UAAU,CAAC,SAAS,EAAE,OAAO,EAAE,gBAAgB,EAAE,aAAa,CAAC,CAAC;AACrG,YAAY,IAAI,CAAC,mBAAmB,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;AACzD,WAAW;AACX,SAAS;AACT,OAAO;AACP,QAAQ,MAAM;AACd;AACA,MAAM,KAAK,OAAO;AAClB,QAAQ,OAAO,CAAC,KAAK,CAAC,IAAI,CAAC,GAAG,EAAC;AAC/B,QAAQ,MAAM;AACd;AACA,MAAM;AACN,QAAQ,OAAO,CAAC,GAAG,CAAC,CAAC,wBAAwB,EAAE,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;AAC7D,KAAK;AACL,GAAG;AACH;AACA;AACA,EAAE,cAAc,CAAC,KAAK,EAAE;AACxB,IAAI,OAAO,KAAK,CAAC,MAAM,CAAC,IAAI,IAAI;AAChC,MAAM,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC3D,MAAM,OAAO,QAAQ,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;AAC7C,KAAK,CAAC;AACN,GAAG;AACH;AACA;AACA,EAAE,cAAc,CAAC,SAAS,EAAE;AAC5B,IAAI,IAAI,aAAa,CAAC;AACtB,IAAI,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,QAAQ,KAAK;AACzC,MAAM,IAAI,QAAQ,CAAC,mBAAmB,EAAE;AACxC,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;AACvD,QAAQ,MAAM,IAAI,GAAG,QAAQ,CAAC,cAAc,EAAE,CAAC;AAC/C,QAAQ,IAAI,IAAI,KAAK,SAAS,IAAI,IAAI,EAAE;AACxC,UAAU,aAAa,GAAG,aAAa,IAAI;AAC3C,YAAY,IAAI,EAAE,kBAAkB;AACpC,YAAY,SAAS,EAAE,EAAE;AACzB,WAAW,CAAC;AACZ,UAAU,aAAa,CAAC,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;AAC9E,SAAS;AACT,OAAO;AACP,MAAM,IAAI,aAAa,EAAE;AACzB;AACA;AACA;AACA;AACA;AACA,QAAQ,IAAI,CAAC,mBAAmB,CAAC,aAAa,CAAC,CAAC;AAChD,OAAO;AACP,KAAK,CAAC,CAAC;AACP,GAAG;AACH;;AC7ZA,MAAM,MAAM,GAAG,YAAY,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD;AACA,IAAI,MAAM,CAAC;AACX;AACA,eAAe,eAAe,CAAC,GAAG,EAAE;AACpC,EAAE,MAAM,UAAU,GAAG,MAAM,OAAO;AAClC,IAAI,GAAG;AACP;AACA;AACA,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,uBAAuB,CAAC,GAAG,CAAC;AAChD,IAAI,CAAC,GAAG,KAAK,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG,CAAC;AACJ,EAAE,MAAM,GAAG,IAAI,WAAW,CAAC,UAAU,EAAE,CAAC,GAAG,KAAK,mBAAmB,CAAC,GAAG,CAAC,CAAC,CAAC;AAC1E;AACA,EAAE,IAAI,OAAO,MAAM,CAAC,YAAY,KAAK,UAAU,EAAE;AACjD,IAAI,MAAM,MAAM,CAAC,YAAY,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;AAChD,GAAG;AACH,EAAE,IAAI,OAAO,MAAM,CAAC,KAAK,KAAK,UAAU,EAAE;AAC1C,IAAI,MAAM,MAAM,CAAC,KAAK,EAAE,CAAC;AACzB,GAAG;AACH,CAAC;AAID;AACA,SAAS,mBAAmB,CAAC,OAAO,CAAC;AACrC,EAAc,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,EAAE;AAS5C,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AAEvB,CAAC;AACD;AACA,MAAM,uBAAuB,GAAG,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK;AAC7D,EAAE,QAAQ,OAAO,CAAC,IAAI;AACtB,IAAI,KAAK,SAAS;AAClB,MAAM,MAAM,eAAe,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;AACzC,MAAM,WAAW,CAAC,EAAE,IAAI,EAAE,WAAW,EAAE,CAAC,CAAC;AACzC,MAAM,MAAM;AACZ,IAAI,KAAK,WAAW;AACpB,MAAM,MAAM,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAChC,MAAM,MAAM;AACZ,IAAI,KAAK,aAAa;AACtB,MAAM,MAAM,CAAC,WAAW,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;AAC3C,MAAM,MAAM;AACZ;AACA,IAAI,KAAK,qBAAqB;AAC9B,MAAM,WAAW,CAAC,EAAE,IAAI,EAAE,gBAAgB,EAAE,IAAI,EAAE,eAAe,EAAE,EAAE,CAAC,CAAC;AACvE,MAAM,MAAM;AACZ,IAAI;AACJ,MAAM,MAAM,CAAC,uBAAuB,CAAC,OAAO,CAAC,CAAC;AAC9C,GAAG;AACH,CAAC,CAAC;AACF;AACA;AACA,IAAI,CAAC,gBAAgB,CAAC,SAAS,EAAE,uBAAuB,CAAC,CAAC;AAC1D;AACA,WAAW,CAAC,EAAE,IAAI,EAAE,OAAO,EAAE,CAAC"}